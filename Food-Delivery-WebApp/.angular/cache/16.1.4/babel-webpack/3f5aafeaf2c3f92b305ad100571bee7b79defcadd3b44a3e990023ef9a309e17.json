{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { BehaviorSubject, tap } from 'rxjs';\nimport { User } from '../shared/models/User';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.loginUrl = \"http://localhost:5000/api/users/login\";\n    this.signupUrl = \"http://localhost:5000/api/users/signup\";\n    this.userSubject = new BehaviorSubject(this.getUserFromLocalStorage());\n    this.fireIsLoggedIn = new EventEmitter();\n    this.userObservable = this.userSubject.asObservable();\n  }\n  loginUser(userLogin) {\n    return this.http.post(this.loginUrl, userLogin).pipe(tap({\n      next: user => {\n        alert('login success');\n        this.setUsertoLocalStorage(user);\n        // using event emitter to modify navbar with login user name automatically without refreshing page\n        this.fireIsLoggedIn.next(user);\n      },\n      error: errorResponse => {\n        alert('login failed');\n      }\n    }));\n  }\n  setUsertoLocalStorage(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n  getUserFromLocalStorage() {\n    const userJson = localStorage.getItem('user');\n    if (userJson) return JSON.parse(userJson);\n    return new User();\n  }\n  logout() {\n    this.userSubject.next(new User());\n    localStorage.removeItem('user');\n    window.location.reload();\n  }\n  getEmitter() {\n    return this.fireIsLoggedIn;\n  }\n  isLoggedIn() {\n    let tokenStr = localStorage.getItem('user');\n    if (tokenStr == undefined || tokenStr == '' || tokenStr == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  signupUser(user) {\n    return this.http.post(this.signupUrl, user);\n  }\n  getUser() {\n    let userStr = localStorage.getItem(\"user\");\n    if (userStr != null) {\n      return JSON.parse(userStr);\n    } else {\n      return null;\n    }\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["EventEmitter","BehaviorSubject","tap","User","UserService","constructor","http","loginUrl","signupUrl","userSubject","getUserFromLocalStorage","fireIsLoggedIn","userObservable","asObservable","loginUser","userLogin","post","pipe","next","user","alert","setUsertoLocalStorage","error","errorResponse","localStorage","setItem","JSON","stringify","userJson","getItem","parse","logout","removeItem","window","location","reload","getEmitter","isLoggedIn","tokenStr","undefined","signupUser","getUser","userStr","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\Angular Projects\\OnlineFoodDelivery_WebApplication\\Food-Delivery-WebApp\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, tap } from 'rxjs';\nimport { User } from '../shared/models/User';\nimport { UserLogin } from '../shared/interfaces/UserLogin';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\nloginUrl=\"http://localhost:5000/api/users/login\"\nsignupUrl=\"http://localhost:5000/api/users/signup\"\n\nprivate userSubject=new BehaviorSubject<User>(this.getUserFromLocalStorage());\n// public loginStatusSubject=new Subject<boolean>();\n\npublic userObservable:Observable<User>\n\n@Output() fireIsLoggedIn: EventEmitter<any> = new EventEmitter<any>\n\n  constructor(private http:HttpClient) {\n\n    this.userObservable=this.userSubject.asObservable()\n   }\n\n\n\n  loginUser(userLogin:UserLogin){\n\n   return this.http.post<User>(this.loginUrl,userLogin).pipe(tap({\n    next:(user)=>{\n      alert('login success')\n      this.setUsertoLocalStorage(user)\n\n      // using event emitter to modify navbar with login user name automatically without refreshing page\n      this.fireIsLoggedIn.next(user)\n      \n    },\n    error:(errorResponse)=>{\n      alert('login failed')\n    }\n   \n  \n    \n   }))\n\n\n  }\n\n  setUsertoLocalStorage(user:User){\n\n\n\n    localStorage.setItem('user',JSON.stringify(user))\n  }\n\n  getUserFromLocalStorage(){\n\n    const userJson= localStorage.getItem('user')\n    if(userJson)\n    return JSON.parse(userJson) as User\n\n    return new User();\n  }\n\n\n  logout(){\n    this.userSubject.next(new User());\n    localStorage.removeItem('user')\n    window.location.reload();\n\n\n  }\n\n  getEmitter() { \n    return this.fireIsLoggedIn; \n  } \n\n  isLoggedIn(){\n    let tokenStr=localStorage.getItem('user');\n\n    if(tokenStr==undefined || tokenStr==''|| tokenStr==null){\n      return false\n    }\n    else{\n      return true;\n    }\n\n  }\n\nsignupUser(user:User){\n\n  return this.http.post(this.signupUrl,user)\n}\n\n\npublic getUser(){\n  let userStr=localStorage.getItem(\"user\");\n  if(userStr!=null){\n    return JSON.parse(userStr);\n  }else{\n    \n    return null;\n\n  }\n\n}\n\n}\n"],"mappings":"AACA,SAASA,YAAY,QAA4B,eAAe;AAChE,SAASC,eAAe,EAAuBC,GAAG,QAAQ,MAAM;AAChE,SAASC,IAAI,QAAQ,uBAAuB;;;AAM5C,OAAM,MAAOC,WAAW;EAYtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAV1B,KAAAC,QAAQ,GAAC,uCAAuC;IAChD,KAAAC,SAAS,GAAC,wCAAwC;IAE1C,KAAAC,WAAW,GAAC,IAAIR,eAAe,CAAO,IAAI,CAACS,uBAAuB,EAAE,CAAC;IAKnE,KAAAC,cAAc,GAAsB,IAAIX,YAAiB,CAAjB,CAAiB;IAI/D,IAAI,CAACY,cAAc,GAAC,IAAI,CAACH,WAAW,CAACI,YAAY,EAAE;EACpD;EAIDC,SAASA,CAACC,SAAmB;IAE5B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAO,IAAI,CAACT,QAAQ,EAACQ,SAAS,CAAC,CAACE,IAAI,CAACf,GAAG,CAAC;MAC7DgB,IAAI,EAAEC,IAAI,IAAG;QACXC,KAAK,CAAC,eAAe,CAAC;QACtB,IAAI,CAACC,qBAAqB,CAACF,IAAI,CAAC;QAEhC;QACA,IAAI,CAACR,cAAc,CAACO,IAAI,CAACC,IAAI,CAAC;MAEhC,CAAC;MACDG,KAAK,EAAEC,aAAa,IAAG;QACrBH,KAAK,CAAC,cAAc,CAAC;MACvB;KAIA,CAAC,CAAC;EAGJ;EAEAC,qBAAqBA,CAACF,IAAS;IAI7BK,YAAY,CAACC,OAAO,CAAC,MAAM,EAACC,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,CAAC;EACnD;EAEAT,uBAAuBA,CAAA;IAErB,MAAMkB,QAAQ,GAAEJ,YAAY,CAACK,OAAO,CAAC,MAAM,CAAC;IAC5C,IAAGD,QAAQ,EACX,OAAOF,IAAI,CAACI,KAAK,CAACF,QAAQ,CAAS;IAEnC,OAAO,IAAIzB,IAAI,EAAE;EACnB;EAGA4B,MAAMA,CAAA;IACJ,IAAI,CAACtB,WAAW,CAACS,IAAI,CAAC,IAAIf,IAAI,EAAE,CAAC;IACjCqB,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAG1B;EAEAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACzB,cAAc;EAC5B;EAEA0B,UAAUA,CAAA;IACR,IAAIC,QAAQ,GAACd,YAAY,CAACK,OAAO,CAAC,MAAM,CAAC;IAEzC,IAAGS,QAAQ,IAAEC,SAAS,IAAID,QAAQ,IAAE,EAAE,IAAGA,QAAQ,IAAE,IAAI,EAAC;MACtD,OAAO,KAAK;KACb,MACG;MACF,OAAO,IAAI;;EAGf;EAEFE,UAAUA,CAACrB,IAAS;IAElB,OAAO,IAAI,CAACb,IAAI,CAACU,IAAI,CAAC,IAAI,CAACR,SAAS,EAACW,IAAI,CAAC;EAC5C;EAGOsB,OAAOA,CAAA;IACZ,IAAIC,OAAO,GAAClB,YAAY,CAACK,OAAO,CAAC,MAAM,CAAC;IACxC,IAAGa,OAAO,IAAE,IAAI,EAAC;MACf,OAAOhB,IAAI,CAACI,KAAK,CAACY,OAAO,CAAC;KAC3B,MAAI;MAEH,OAAO,IAAI;;EAIf;;AAlGatC,WAAW,C;mBAAXA,WAAW,EAAAuC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAX1C,WAAW,C;SAAXA,WAAW;EAAA2C,OAAA,EAAX3C,WAAW,CAAA4C,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}