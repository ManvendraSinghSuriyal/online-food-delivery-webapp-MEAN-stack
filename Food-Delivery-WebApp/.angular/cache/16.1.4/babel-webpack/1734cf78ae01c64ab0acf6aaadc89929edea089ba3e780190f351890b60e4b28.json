{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class LoadingService {\n  constructor() {\n    this.isLoadingSubject = new BehaviorSubject(false);\n  }\n  showLoading() {\n    this.isLoadingSubject.next(true);\n    console.log(\"reached at show\");\n  }\n  hideLoading() {\n    this.isLoadingSubject.next(false);\n  }\n  get isLoading() {\n    return this.isLoadingSubject.asObservable();\n  }\n}\nLoadingService.ɵfac = function LoadingService_Factory(t) {\n  return new (t || LoadingService)();\n};\nLoadingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoadingService,\n  factory: LoadingService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","LoadingService","constructor","isLoadingSubject","showLoading","next","console","log","hideLoading","isLoading","asObservable","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\Angular Projects\\OnlineFoodDelivery_WebApplication\\Food-Delivery-WebApp\\src\\app\\services\\loading.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n private isLoadingSubject=new BehaviorSubject<Boolean>(false);\n\n  constructor() { }\n\n showLoading(){\n  this.isLoadingSubject.next(true);\n  console.log(\"reached at show\")\n }\n\n hideLoading(){\n  this.isLoadingSubject.next(false)\n }\n\n\n get isLoading(){\n  return this.isLoadingSubject.asObservable()\n }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,cAAc;EAIzBC,YAAA;IAFO,KAAAC,gBAAgB,GAAC,IAAIH,eAAe,CAAU,KAAK,CAAC;EAE3C;EAEjBI,WAAWA,CAAA;IACV,IAAI,CAACD,gBAAgB,CAACE,IAAI,CAAC,IAAI,CAAC;IAChCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAC/B;EAEAC,WAAWA,CAAA;IACV,IAAI,CAACL,gBAAgB,CAACE,IAAI,CAAC,KAAK,CAAC;EAClC;EAGA,IAAII,SAASA,CAAA;IACZ,OAAO,IAAI,CAACN,gBAAgB,CAACO,YAAY,EAAE;EAC5C;;AAlBYT,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;SAAdA,cAAc;EAAAU,OAAA,EAAdV,cAAc,CAAAW,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}