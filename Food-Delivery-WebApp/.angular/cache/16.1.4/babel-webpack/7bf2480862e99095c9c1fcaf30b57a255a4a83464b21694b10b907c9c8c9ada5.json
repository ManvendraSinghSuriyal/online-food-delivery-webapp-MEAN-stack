{"ast":null,"code":"import { interval, map, take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrderService {\n  constructor(http) {\n    this.http = http;\n    this.orderUrl = 'http://localhost:5000/api/orders';\n    this.orderStatuses = [{\n      status: 'Ordered',\n      icon: 'âœ…'\n    }, {\n      status: 'Cooking',\n      icon: 'ðŸ”¥'\n    }, {\n      status: 'Packed',\n      icon: 'ðŸ“¦'\n    }, {\n      status: 'Out for Delivery',\n      icon: 'ðŸšš'\n    }, {\n      status: 'Delivered',\n      icon: 'ðŸŽ‰'\n    }];\n  }\n  createOrder(order) {\n    return this.http.post(`${this.orderUrl}/create`, order);\n  }\n  getOrderStatusUpdates() {\n    return interval(5000).pipe(map(index => this.orderStatuses.slice(0, index + 1)), take(this.orderStatuses.length));\n  }\n  getOrderForCurrentUser() {\n    return this.http.get(`${this.orderUrl}/newOrderForUser`);\n  }\n  pay(order) {\n    return this.http.post(`${this.orderUrl}/pay`, order);\n  }\n  trackOrderById(id) {\n    return this.http.get(`${this.orderUrl}/track/` + id);\n  }\n}\nOrderService.Éµfac = function OrderService_Factory(t) {\n  return new (t || OrderService)(i0.ÉµÉµinject(i1.HttpClient));\n};\nOrderService.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n  token: OrderService,\n  factory: OrderService.Éµfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["interval","map","take","OrderService","constructor","http","orderUrl","orderStatuses","status","icon","createOrder","order","post","getOrderStatusUpdates","pipe","index","slice","length","getOrderForCurrentUser","get","pay","trackOrderById","id","i0","ÉµÉµinject","i1","HttpClient","factory","Éµfac","providedIn"],"sources":["D:\\Projects\\Angular Projects\\OnlineFoodDelivery_WebApplication\\Food-Delivery-WebApp\\src\\app\\services\\order.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Order } from '../shared/models/Order';\nimport { Observable, interval, map, take } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  orderUrl='http://localhost:5000/api/orders'\n\n  private orderStatuses = [\n    { status: 'Ordered', icon: 'âœ…' },\n    { status: 'Cooking', icon: 'ðŸ”¥' },\n    { status: 'Packed', icon: 'ðŸ“¦' },\n    { status: 'Out for Delivery', icon: 'ðŸšš' },\n    { status: 'Delivered', icon: 'ðŸŽ‰' }\n  ];\n\n  constructor(private http:HttpClient) {\n\n\n\n\n   }\n\n\n\n   createOrder(order:Order){\n   return this.http.post<Order>(`${this.orderUrl}/create`,order)\n   }\n\n   getOrderStatusUpdates(): Observable<{ status: string; icon: string }[]> {\n    return interval(5000).pipe(\n      map(index => this.orderStatuses.slice(0, index + 1)),\n      take(this.orderStatuses.length)\n    );\n  }\n\n\n   getOrderForCurrentUser(){\n   return this.http.get<Order>(`${this.orderUrl}/newOrderForUser`)\n   }\n\n\n\n   pay(order:Order):Observable<string>{\n    return this.http.post<string>(`${this.orderUrl}/pay`,order);\n  }\n\n  trackOrderById(id:number): Observable<Order>{\n    return this.http.get<Order>( `${this.orderUrl}/track/`+id);\n  }\n}\n"],"mappings":"AAGA,SAAqBA,QAAQ,EAAEC,GAAG,EAAEC,IAAI,QAAQ,MAAM;;;AAKtD,OAAM,MAAOC,YAAY;EAYvBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAVxB,KAAAC,QAAQ,GAAC,kCAAkC;IAEnC,KAAAC,aAAa,GAAG,CACtB;MAAEC,MAAM,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAG,CAAE,EAChC;MAAED,MAAM,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAI,CAAE,EACjC;MAAED,MAAM,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAI,CAAE,EAChC;MAAED,MAAM,EAAE,kBAAkB;MAAEC,IAAI,EAAE;IAAI,CAAE,EAC1C;MAAED,MAAM,EAAE,WAAW;MAAEC,IAAI,EAAE;IAAI,CAAE,CACpC;EAOA;EAIAC,WAAWA,CAACC,KAAW;IACvB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAQ,GAAG,IAAI,CAACN,QAAQ,SAAS,EAACK,KAAK,CAAC;EAC7D;EAEAE,qBAAqBA,CAAA;IACpB,OAAOb,QAAQ,CAAC,IAAI,CAAC,CAACc,IAAI,CACxBb,GAAG,CAACc,KAAK,IAAI,IAAI,CAACR,aAAa,CAACS,KAAK,CAAC,CAAC,EAAED,KAAK,GAAG,CAAC,CAAC,CAAC,EACpDb,IAAI,CAAC,IAAI,CAACK,aAAa,CAACU,MAAM,CAAC,CAChC;EACH;EAGCC,sBAAsBA,CAAA;IACtB,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAQ,GAAG,IAAI,CAACb,QAAQ,kBAAkB,CAAC;EAC/D;EAIAc,GAAGA,CAACT,KAAW;IACd,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAS,GAAG,IAAI,CAACN,QAAQ,MAAM,EAACK,KAAK,CAAC;EAC7D;EAEAU,cAAcA,CAACC,EAAS;IACtB,OAAO,IAAI,CAACjB,IAAI,CAACc,GAAG,CAAS,GAAG,IAAI,CAACb,QAAQ,SAAS,GAACgB,EAAE,CAAC;EAC5D;;AA7CWnB,YAAY,C;mBAAZA,YAAY,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZvB,YAAY,C;SAAZA,YAAY;EAAAwB,OAAA,EAAZxB,YAAY,CAAAyB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}