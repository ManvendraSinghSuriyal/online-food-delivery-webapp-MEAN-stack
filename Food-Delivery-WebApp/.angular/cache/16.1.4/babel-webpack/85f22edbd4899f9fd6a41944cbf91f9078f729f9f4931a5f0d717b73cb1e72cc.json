{"ast":null,"code":"import { Order } from 'src/app/shared/models/Order';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/order.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@google-pay/button-angular\";\nimport * as i5 from \"../../map/map.component\";\nfunction PaymentPageComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"div\", 18)(3, \"a\", 19);\n    i0.ɵɵelement(4, \"img\", 20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 21)(6, \"div\", 22)(7, \"h6\", 23);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\", 24);\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"currency\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", item_r1.food.imageUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r1.food.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 3, item_r1.food.price, \"INR\"));\n  }\n}\nexport class PaymentPageComponent {\n  constructor(orderService, router) {\n    this.orderService = orderService;\n    this.router = router;\n    this.order = new Order();\n    this.buttonColor = \"black\";\n    this.buttonType = \"buy\";\n    this.isCustomSize = false;\n    this.buttonWidth = 240;\n    this.buttonHeight = 40;\n    this.isTop = window === window.top;\n    this.paymentRequest = {\n      apiVersion: 2,\n      apiVersionMinor: 0,\n      allowedPaymentMethods: [{\n        type: \"CARD\",\n        parameters: {\n          allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n          allowedCardNetworks: [\"AMEX\", \"VISA\", \"MASTERCARD\"]\n        },\n        tokenizationSpecification: {\n          type: \"PAYMENT_GATEWAY\",\n          parameters: {\n            gateway: \"example\",\n            gatewayMerchantId: \"exampleGatewayMerchantId\"\n          }\n        }\n      }],\n      merchantInfo: {\n        merchantId: \"12345678901234567890\",\n        merchantName: \"Demo Merchant\"\n      },\n      transactionInfo: {\n        totalPriceStatus: \"FINAL\",\n        totalPriceLabel: \"Total\",\n        // totalPrice: this.order.totalPrice!,\n        currencyCode: \"USD\",\n        countryCode: \"US\"\n      }\n    };\n  }\n  ngOnInit() {\n    this.orderService.getOrderForCurrentUser().subscribe({\n      next: order => {\n        this.order = order;\n      },\n      error: errorResponse => {\n        this.router.navigate(['/checkout']);\n      }\n    });\n  }\n  onLoadPaymentData(event) {\n    console.log(event.detail);\n  }\n}\nPaymentPageComponent.ɵfac = function PaymentPageComponent_Factory(t) {\n  return new (t || PaymentPageComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.Router));\n};\nPaymentPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaymentPageComponent,\n  selectors: [[\"app-payment-page\"]],\n  decls: 23,\n  vars: 15,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"row\"], [1, \"col-md-7\"], [1, \"mb-4\"], [3, \"order\", \"unchangeable\"], [1, \"col-md-5\", \"py-3\", \"bg\"], [1, \"card\"], [1, \"card-body\", \"bg-dark\", \"text-white\"], [1, \"card-title\", \"pb-3\"], [1, \"mb-2\"], [1, \"mb-3\"], [\"class\", \"mb-\", 4, \"ngFor\", \"ngForOf\"], [1, \"card-text\", \"font-weight-bold\", \"text-success\"], [1, \"card-footer\", \"text-center\", \"bg-success\", \"py-3\"], [2, \"margin-top\", \"10px\", \"margin-bottom\", \"10px\", \"min-height\", \"40px\"], [\"environment\", \"TEST\", \"buttonColor\", \"black\", \"buttonType\", \"order\", 3, \"buttonSizeMode\", \"paymentRequest\", \"loadpaymentdata\"], [1, \"mb-\"], [1, \"d-flex\"], [1, \"mr-3\", \"pe-4\"], [\"href\", \"#\"], [\"alt\", \"Food\", 1, \"img-fluid\", \"rounded\", 2, \"max-width\", \"100px\", 3, \"src\"], [1, \"flex-grow-1\", \"pt-3\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"mb-1\"], [1, \"text-success\", \"mb-0\"]],\n  template: function PaymentPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\n      i0.ɵɵtext(4, \"Your Selected Address on Map\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"app-map\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 7)(9, \"h3\", 8);\n      i0.ɵɵtext(10, \"Order Summary\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"h6\", 9);\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"p\", 10);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, PaymentPageComponent_div_15_Template, 12, 6, \"div\", 11);\n      i0.ɵɵelement(16, \"hr\");\n      i0.ɵɵelementStart(17, \"h4\", 12);\n      i0.ɵɵtext(18);\n      i0.ɵɵpipe(19, \"currency\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 13)(21, \"div\", 14)(22, \"google-pay-button\", 15);\n      i0.ɵɵlistener(\"loadpaymentdata\", function PaymentPageComponent_Template_google_pay_button_loadpaymentdata_22_listener($event) {\n        return ctx.onLoadPaymentData($event);\n      });\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"order\", ctx.order)(\"unchangeable\", true);\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate1(\"Name: \", ctx.order.name, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Address: \", ctx.order.address, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.order.items);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Total Price: \", i0.ɵɵpipeBind2(19, 12, ctx.order.totalPrice, \"INR\"), \"\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵstyleProp(\"width\", ctx.buttonWidth, \"px\")(\"height\", ctx.buttonHeight, \"px\");\n      i0.ɵɵproperty(\"buttonSizeMode\", ctx.isCustomSize ? \"fill\" : \"static\")(\"paymentRequest\", ctx.paymentRequest);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.GooglePayButtonComponent, i5.MapComponent, i3.CurrencyPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Order","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","item_r1","food","imageUrl","ɵɵsanitizeUrl","ɵɵtextInterpolate","name","ɵɵpipeBind2","price","PaymentPageComponent","constructor","orderService","router","order","buttonColor","buttonType","isCustomSize","buttonWidth","buttonHeight","isTop","window","top","paymentRequest","apiVersion","apiVersionMinor","allowedPaymentMethods","type","parameters","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","gateway","gatewayMerchantId","merchantInfo","merchantId","merchantName","transactionInfo","totalPriceStatus","totalPriceLabel","currencyCode","countryCode","ngOnInit","getOrderForCurrentUser","subscribe","next","error","errorResponse","navigate","onLoadPaymentData","event","console","log","detail","ɵɵdirectiveInject","i1","OrderService","i2","Router","selectors","decls","vars","consts","template","PaymentPageComponent_Template","rf","ctx","ɵɵtemplate","PaymentPageComponent_div_15_Template","ɵɵlistener","PaymentPageComponent_Template_google_pay_button_loadpaymentdata_22_listener","$event","ɵɵtextInterpolate1","address","items","totalPrice","ɵɵstyleProp"],"sources":["D:\\Projects\\Angular Projects\\OnlineFoodDelivery_WebApplication\\Food-Delivery-WebApp\\src\\app\\components\\pages\\payment-page\\payment-page.component.ts","D:\\Projects\\Angular Projects\\OnlineFoodDelivery_WebApplication\\Food-Delivery-WebApp\\src\\app\\components\\pages\\payment-page\\payment-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OrderService } from 'src/app/services/order.service';\nimport { Order } from 'src/app/shared/models/Order';\n\n@Component({\n  selector: 'app-payment-page',\n  templateUrl: './payment-page.component.html',\n  styleUrls: ['./payment-page.component.css']\n})\nexport class PaymentPageComponent implements OnInit {\n\n  order:Order=new Order()\n\n  buttonColor = \"black\";\n  buttonType = \"buy\";\n  isCustomSize = false;\n  buttonWidth = 240;\n  buttonHeight = 40;\n  isTop = window === window.top;\n\n\n  \n\n\n\n\n\n\n  \n  paymentRequest:any = {\n    apiVersion: 2,\n    apiVersionMinor: 0,\n    allowedPaymentMethods: [\n      {\n        type: \"CARD\",\n        parameters: {\n          allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n          allowedCardNetworks: [\"AMEX\", \"VISA\", \"MASTERCARD\"]\n        },\n        tokenizationSpecification: {\n          type: \"PAYMENT_GATEWAY\",\n          parameters: {\n            gateway: \"example\",\n            gatewayMerchantId: \"exampleGatewayMerchantId\"\n          }\n        }\n      }\n    ],\n    merchantInfo: {\n      merchantId: \"12345678901234567890\",\n      merchantName: \"Demo Merchant\",\n     \n\n      \n    },\n    transactionInfo: {\n      totalPriceStatus: \"FINAL\",\n      totalPriceLabel: \"Total\",\n      // totalPrice: this.order.totalPrice!,\n      currencyCode: \"USD\",\n      countryCode: \"US\",\n     \n\n    }\n  };\n\n\n\n  constructor(private orderService:OrderService,private router:Router){\n\n    \n  \n\n  }\n  ngOnInit(): void {\n    this.orderService.getOrderForCurrentUser().subscribe({\n      next:(order)=>{\n        this.order=order\n        \n        \n      },\n      error:(errorResponse)=>{\n         this.router.navigate(['/checkout'])\n      }\n\n    })\n  }\n\n\n\n  onLoadPaymentData(event:any){\n\n    console.log(event.detail)\n  }\n\n}\n ","<div class=\"container mt-5\">\n    <div class=\"row\">\n      <!-- Left Column with Map -->\n      <div class=\"col-md-7\">\n        <!-- Placeholder for Map Integration -->\n        <h2 class=\"mb-4\">Your Selected Address on Map</h2>\n        <app-map [order]=\"order\"  [unchangeable]=\"true\"></app-map>\n      </div>\n  \n      <!-- Right Column with Order Summary -->\n      <div class=\"col-md-5 py-3 bg\">\n        <div class=\"card \">\n          <div class=\"card-body bg-dark text-white\">\n            <h3 class=\"card-title pb-3\">Order Summary</h3>\n            \n            <!-- Display Name and Address -->\n            <h6 class=\"mb-2\">Name: {{ order.name }}</h6>\n            <p class=\"mb-3\">Address: {{ order.address }}</p>\n            \n            <!-- Display Order Items -->\n            <div *ngFor=\"let item of order.items\" class=\"mb-\" >\n              <div class=\"d-flex\">\n                <div class=\"mr-3 pe-4\">\n                  <a href=\"#\">\n                    <img [src]=\"item.food.imageUrl\" alt=\"Food\" class=\"img-fluid rounded\" style=\"max-width: 100px;\">\n                  </a>\n                </div>\n                <div class=\"flex-grow-1 pt-3\">\n                  <div class=\"d-flex justify-content-between\">\n                    <h6 class=\"mb-1\">{{ item.food.name }}</h6>\n                    <p class=\"text-success mb-0\">{{ item.food.price|currency:'INR'}}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <hr>\n            \n            <!-- Display Total Price -->\n            <h4 class=\"card-text font-weight-bold text-success\">Total Price: {{ order.totalPrice | currency:'INR'}}</h4>\n            \n\n          </div>\n          <div class=\"card-footer text-center bg-success py-3\">\n                        <!-- Payment Button -->\n                        <div style=\"  margin-top: 10px;\n                        margin-bottom: 10px;\n                        min-height: 40px;\">\n                        <!-- <button class=\"btn btn-primary\">Proceed to Payment</button> -->\n                        <google-pay-button environment=\"TEST\" buttonColor=\"black\" buttonType=\"order\"\n                [buttonSizeMode]=\"isCustomSize ? 'fill' : 'static'\" [paymentRequest]=\"paymentRequest\" [style.width.px]=\"buttonWidth\"\n                [style.height.px]=\"buttonHeight\" (loadpaymentdata)=\"onLoadPaymentData($event)\"></google-pay-button>\n                        \n                    </div>\n        \n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}