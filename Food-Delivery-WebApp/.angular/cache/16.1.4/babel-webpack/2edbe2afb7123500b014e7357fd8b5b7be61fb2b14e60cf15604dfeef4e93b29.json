{"ast":null,"code":"import { User } from 'src/app/shared/models/User';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"@angular/forms\";\nexport class SignupComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.user = new User();\n  }\n  submitForm() {\n    this.userService.signupUser(this.user).subscribe({\n      next: data => {\n        alert(\"sign up success!!\");\n        this.resetForm();\n        console.log(data);\n      },\n      error: error => {\n        alert(\"error occured\");\n        console.log(error);\n      },\n      complete: () => {\n        console.log('completed');\n      }\n    });\n  }\n  resetForm() {\n    this.user = {\n      id: '',\n      name: '',\n      password: '',\n      email: '',\n      address: '',\n      isAdmin: false,\n      token: ''\n    };\n  }\n}\nSignupComponent.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n};\nSignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignupComponent,\n  selectors: [[\"app-signup\"]],\n  decls: 14,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"placeholder\", \"username\", \"name\", \"name\", \"formControlName\", \"name\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\"], [\"placeholder\", \"email address\", \"name\", \"email\", \"formControlName\", \"email\", \"type\", \"email\", 1, \"form-control\"], [\"placeholder\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"type\", \"password\", 1, \"form-control\"], [\"placeholder\", \"password\", \"name\", \"password\", \"formControlName\", \"confirmPassword\", \"type\", \"password\", 1, \"form-control\"], [\"placeholder\", \"provide your address here..\", \"name\", \"address\", \"formControlName\", \"address\", 1, \"form-control\"], [1, \"text-center\", \"py-2\"], [\"type\", \"submit\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-lg\", \"btn-success\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelement(2, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1);\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 1);\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 1);\n      i0.ɵɵelement(10, \"textarea\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"button\", 8);\n      i0.ɵɵtext(13, \"Signup\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.regForm);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["User","SignupComponent","constructor","userService","user","submitForm","signupUser","subscribe","next","data","alert","resetForm","console","log","error","complete","id","name","password","email","address","isAdmin","token","i0","ɵɵdirectiveInject","i1","UserService","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","SignupComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵproperty","regForm"],"sources":["D:\\Projects\\Angular Projects\\OnlineFoodDelivery_WebApplication\\Food-Delivery-WebApp\\src\\app\\components\\signup\\signup.component.ts","D:\\Projects\\Angular Projects\\OnlineFoodDelivery_WebApplication\\Food-Delivery-WebApp\\src\\app\\components\\signup\\signup.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/app/shared/models/User';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent  {\n\n  user: User = new User;\n  constructor(private userService:UserService,){\n\n\n  }\n\n\n  submitForm(){\n\nthis.userService.signupUser(this.user).subscribe({\nnext:(data)=>{\n  alert(\"sign up success!!\")\n  this.resetForm()\n  console.log(data)\n  \n},\nerror:(error)=>{\n  alert(\"error occured\");\n  console.log(error)\n\n},\n\ncomplete:()=> {\n    console.log('completed')\n    \n},\n\n\n})\n\n\n\n  }\n\n\n\n  resetForm() {\n    this.user = {\n      id:'',\n      name: '',\n      password: '',\n      email: '',\n      address: '',\n      isAdmin:false,\n      token:''\n    };\n  }\n}\n","\n\n                <form [formGroup]=\"regForm\" (ngSubmit)=\"submitForm()\">\n\n\n                  <div class=\"mb-3\">\n                   \n                    <input  placeholder=\"username\" name=\"name\" formControlName=\"name\"  type=\"text\" class=\"form-control\" \n                    \n                    required>\n                  </div>\n\n                    <div class=\"mb-3\">\n                   \n                      <input  placeholder=\"email address\" name=\"email\" formControlName=\"email\" type=\"email\" class=\"form-control\" \n                        >\n                   \n                    </div>\n                    <div class=\"mb-3\">\n                     \n                      <input  placeholder=\"password\"  name=\"password\" formControlName=\"password\"  type=\"password\" class=\"form-control\" >\n                    </div>\n\n\n                    <div class=\"mb-3\">\n                     \n                      <input  placeholder=\"password\"  name=\"password\" formControlName=\"confirmPassword\"  type=\"password\" class=\"form-control\" >\n                    </div>\n\n                <div class=\"mb-3\">\n                  \n                  <textarea  placeholder=\"provide your address here..\"  name=\"address\" formControlName=\"address\"   class=\"form-control\"></textarea>\n             \n                  </div>\n\n\n                  <div class=\"text-center py-2\">\n                    <button type=\"submit\" class=\"btn btn-lg  btn-success\"  data-bs-dismiss=\"modal\" >Signup</button>\n                </div> \n                </form>\n             \n   \n\n           \n      \n            \n\n \n\n"],"mappings":"AAGA,SAASA,IAAI,QAAQ,4BAA4B;;;;AAOjD,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;IAD/B,KAAAC,IAAI,GAAS,IAAIJ,IAAI,CAAJ,CAAI;EAIrB;EAGAK,UAAUA,CAAA;IAEZ,IAAI,CAACF,WAAW,CAACG,UAAU,CAAC,IAAI,CAACF,IAAI,CAAC,CAACG,SAAS,CAAC;MACjDC,IAAI,EAAEC,IAAI,IAAG;QACXC,KAAK,CAAC,mBAAmB,CAAC;QAC1B,IAAI,CAACC,SAAS,EAAE;QAChBC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MAEnB,CAAC;MACDK,KAAK,EAAEA,KAAK,IAAG;QACbJ,KAAK,CAAC,eAAe,CAAC;QACtBE,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MAEpB,CAAC;MAEDC,QAAQ,EAACA,CAAA,KAAI;QACTH,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MAE5B;KAGC,CAAC;EAIA;EAIAF,SAASA,CAAA;IACP,IAAI,CAACP,IAAI,GAAG;MACVY,EAAE,EAAC,EAAE;MACLC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAC,KAAK;MACbC,KAAK,EAAC;KACP;EACH;;AAhDWrB,eAAe,C;mBAAfA,eAAe,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAfzB,eAAe,C;QAAfA,eAAe;EAAA0B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRZV,EAAA,CAAAY,cAAA,cAAsD;MAA1BZ,EAAA,CAAAa,UAAA,sBAAAC,kDAAA;QAAA,OAAYH,GAAA,CAAA7B,UAAA,EAAY;MAAA,EAAC;MAGnDkB,EAAA,CAAAY,cAAA,aAAkB;MAEhBZ,EAAA,CAAAe,SAAA,eAES;MACXf,EAAA,CAAAgB,YAAA,EAAM;MAEJhB,EAAA,CAAAY,cAAA,aAAkB;MAEhBZ,EAAA,CAAAe,SAAA,eACG;MAELf,EAAA,CAAAgB,YAAA,EAAM;MACNhB,EAAA,CAAAY,cAAA,aAAkB;MAEhBZ,EAAA,CAAAe,SAAA,eAAkH;MACpHf,EAAA,CAAAgB,YAAA,EAAM;MAGNhB,EAAA,CAAAY,cAAA,aAAkB;MAEhBZ,EAAA,CAAAe,SAAA,eAAyH;MAC3Hf,EAAA,CAAAgB,YAAA,EAAM;MAEVhB,EAAA,CAAAY,cAAA,aAAkB;MAEhBZ,EAAA,CAAAe,SAAA,mBAAiI;MAEjIf,EAAA,CAAAgB,YAAA,EAAM;MAGNhB,EAAA,CAAAY,cAAA,cAA8B;MACoDZ,EAAA,CAAAiB,MAAA,cAAM;MAAAjB,EAAA,CAAAgB,YAAA,EAAS;;;MAnC7FhB,EAAA,CAAAkB,UAAA,cAAAP,GAAA,CAAAQ,OAAA,CAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}