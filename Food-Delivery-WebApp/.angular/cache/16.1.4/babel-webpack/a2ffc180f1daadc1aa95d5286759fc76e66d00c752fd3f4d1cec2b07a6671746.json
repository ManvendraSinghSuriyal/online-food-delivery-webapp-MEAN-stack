{"ast":null,"code":"import { User } from 'src/app/shared/models/User';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"@angular/forms\";\nexport class SignupComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.user = new User();\n  }\n  submitForm() {\n    this.userService.signupUser(this.user).subscribe({\n      next: data => {\n        alert(\"sign up success!!\");\n        console.log(data);\n      },\n      error: error => {\n        alert(\"error occured\");\n        console.log(error);\n      },\n      complete: () => {\n        console.log('completed');\n        this.resetForm();\n      }\n    });\n  }\n  resetForm() {\n    this.user = {\n      name: '',\n      password: '',\n      email: '',\n      address: '',\n      isAdmin: false,\n      token: ''\n    };\n  }\n}\nSignupComponent.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n};\nSignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignupComponent,\n  selectors: [[\"app-signup\"]],\n  decls: 12,\n  vars: 4,\n  consts: [[3, \"ngSubmit\"], [1, \"mb-3\"], [\"placeholder\", \"username\", \"name\", \"name\", \"type\", \"text\", \"id\", \"exampleInputPassword1\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"email address\", \"name\", \"email\", \"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"password\", \"name\", \"password\", \"type\", \"password\", \"id\", \"exampleInputPassword1\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"provide your address here..\", \"name\", \"address\", \"id\", \"exampleInputPassword1\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"text-center\", \"py-2\"], [\"type\", \"submit\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-lg\", \"btn-success\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.user.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"textarea\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_textarea_ngModelChange_8_listener($event) {\n        return ctx.user.address = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"button\", 7);\n      i0.ɵɵtext(11, \"Signup\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.address);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormControlName, i2.NgModel, i2.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["User","SignupComponent","constructor","userService","user","submitForm","signupUser","subscribe","next","data","alert","console","log","error","complete","resetForm","name","password","email","address","isAdmin","token","i0","ɵɵdirectiveInject","i1","UserService","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","SignupComponent_Template_form_ngSubmit_0_listener","SignupComponent_Template_input_ngModelChange_2_listener","$event","ɵɵelementEnd","SignupComponent_Template_input_ngModelChange_4_listener","SignupComponent_Template_input_ngModelChange_6_listener","SignupComponent_Template_textarea_ngModelChange_8_listener","ɵɵtext","ɵɵadvance","ɵɵproperty"],"sources":["D:\\Projects\\Angular Projects\\OnlineFoodDelivery_WebApplication\\Food-Delivery-WebApp\\src\\app\\components\\signup\\signup.component.ts","D:\\Projects\\Angular Projects\\OnlineFoodDelivery_WebApplication\\Food-Delivery-WebApp\\src\\app\\components\\signup\\signup.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/app/shared/models/User';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent  {\n\n  user: User = new User;\n  constructor(private userService:UserService,){\n\n\n  }\n\n\n  submitForm(){\n\nthis.userService.signupUser(this.user).subscribe({\nnext:(data)=>{\n  alert(\"sign up success!!\")\n  console.log(data)\n  \n},\nerror:(error)=>{\n  alert(\"error occured\");\n  console.log(error)\n\n},\n\ncomplete:()=> {\n    console.log('completed')\n    this.resetForm()\n},\n\n\n})\n\n\n\n  }\n\n\n\n  resetForm() {\n    this.user = {\n      name: '',\n      password: '',\n      email: '',\n      address: '',\n      isAdmin:false,\n      token:''\n    };\n  }\n}\n","\n\n                <form  (ngSubmit)=\"submitForm()\">\n\n\n                  <div class=\"mb-3\">\n                   \n                    <input  placeholder=\"username\" name=\"name\" [(ngModel)]=\"user.name\"  type=\"text\" class=\"form-control\" id=\"exampleInputPassword1\" formControlName=\"password\">\n                  </div>\n\n                    <div class=\"mb-3\">\n                   \n                      <input  placeholder=\"email address\" name=\"email\" [(ngModel)]=\"user.email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\n                        required>\n                   \n                    </div>\n                    <div class=\"mb-3\">\n                     \n                      <input  placeholder=\"password\"  name=\"password\" [(ngModel)]=\"user.password\"  type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" formControlName=\"password\">\n                    </div>\n\n                <div class=\"mb-3\">\n                  \n                  <textarea  placeholder=\"provide your address here..\"  name=\"address\" [(ngModel)]=\"user.address\"   class=\"form-control\" id=\"exampleInputPassword1\" formControlName=\"password\"></textarea>\n             \n                  </div>\n\n\n                  <div class=\"text-center py-2\">\n                    <button type=\"submit\" class=\"btn btn-lg  btn-success\"  data-bs-dismiss=\"modal\" >Signup</button>\n                </div> \n                </form>\n             \n   \n\n           \n      \n            \n\n \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}