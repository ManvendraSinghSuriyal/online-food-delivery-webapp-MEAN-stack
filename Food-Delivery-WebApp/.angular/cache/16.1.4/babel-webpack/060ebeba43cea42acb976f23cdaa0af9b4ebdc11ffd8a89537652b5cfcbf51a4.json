{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { BehaviorSubject, tap } from 'rxjs';\nimport { User } from '../shared/models/User';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.loginUrl = \"http://localhost:5000/api/users/login\";\n    this.userSubject = new BehaviorSubject(this.getUserFromLocalStorage());\n    this.fireIsLoggedIn = new EventEmitter();\n    this.userObservable = this.userSubject.asObservable();\n  }\n  loginUser(userLogin) {\n    return this.http.post(`${this.loginUrl}`, userLogin).pipe(tap({\n      next: user => {\n        alert('login success');\n        this.setUsertoLocalStorage(user);\n        this.fireIsLoggedIn.next(user);\n      },\n      error: errorResponse => {\n        alert('login failed');\n      }\n    }));\n  }\n  setUsertoLocalStorage(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n  getUserFromLocalStorage() {\n    const userJson = localStorage.getItem('user');\n    if (userJson) return JSON.parse(userJson);\n    return new User();\n  }\n  logout() {\n    this.userSubject.next(new User());\n    localStorage.removeItem('user');\n    window.location.reload();\n  }\n  getEmitter() {\n    return this.fireIsLoggedIn;\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["EventEmitter","BehaviorSubject","tap","User","UserService","constructor","http","loginUrl","userSubject","getUserFromLocalStorage","fireIsLoggedIn","userObservable","asObservable","loginUser","userLogin","post","pipe","next","user","alert","setUsertoLocalStorage","error","errorResponse","localStorage","setItem","JSON","stringify","userJson","getItem","parse","logout","removeItem","window","location","reload","getEmitter","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\Angular Projects\\OnlineFoodDelivery_WebApplication\\Food-Delivery-WebApp\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\nimport { User } from '../shared/models/User';\nimport { UserLogin } from '../shared/interfaces/UserLogin';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\nloginUrl=\"http://localhost:5000/api/users/login\"\n\nprivate userSubject=new BehaviorSubject<User>(this.getUserFromLocalStorage());\n\npublic userObservable:Observable<User>\n\n@Output() fireIsLoggedIn: EventEmitter<any> = new EventEmitter<any>\n\n  constructor(private http:HttpClient) {\n\n    this.userObservable=this.userSubject.asObservable()\n   }\n\n\n\n  loginUser(userLogin:UserLogin){\n\n   return this.http.post<User>(`${this.loginUrl}`,userLogin).pipe(tap({\n    next:(user)=>{\n      alert('login success')\n      this.setUsertoLocalStorage(user)\n      this.fireIsLoggedIn.next(user)\n      \n    },\n    error:(errorResponse)=>{\n      alert('login failed')\n    }\n   \n  \n    \n   }))\n\n\n  }\n\n  setUsertoLocalStorage(user:User){\n\n\n\n    localStorage.setItem('user',JSON.stringify(user))\n  }\n\n  getUserFromLocalStorage(){\n\n    const userJson= localStorage.getItem('user')\n    if(userJson)\n    return JSON.parse(userJson) as User\n\n    return new User();\n  }\n\n\n  logout(){\n    this.userSubject.next(new User());\n    localStorage.removeItem('user')\n    window.location.reload();\n\n\n  }\n\n  getEmitter() { \n    return this.fireIsLoggedIn; \n  } \n\n\n\n\n}\n"],"mappings":"AACA,SAASA,YAAY,QAA4B,eAAe;AAChE,SAASC,eAAe,EAAcC,GAAG,QAAQ,MAAM;AACvD,SAASC,IAAI,QAAQ,uBAAuB;;;AAM5C,OAAM,MAAOC,WAAW;EAUtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAR1B,KAAAC,QAAQ,GAAC,uCAAuC;IAExC,KAAAC,WAAW,GAAC,IAAIP,eAAe,CAAO,IAAI,CAACQ,uBAAuB,EAAE,CAAC;IAInE,KAAAC,cAAc,GAAsB,IAAIV,YAAiB,CAAjB,CAAiB;IAI/D,IAAI,CAACW,cAAc,GAAC,IAAI,CAACH,WAAW,CAACI,YAAY,EAAE;EACpD;EAIDC,SAASA,CAACC,SAAmB;IAE5B,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAO,GAAG,IAAI,CAACR,QAAQ,EAAE,EAACO,SAAS,CAAC,CAACE,IAAI,CAACd,GAAG,CAAC;MAClEe,IAAI,EAAEC,IAAI,IAAG;QACXC,KAAK,CAAC,eAAe,CAAC;QACtB,IAAI,CAACC,qBAAqB,CAACF,IAAI,CAAC;QAChC,IAAI,CAACR,cAAc,CAACO,IAAI,CAACC,IAAI,CAAC;MAEhC,CAAC;MACDG,KAAK,EAAEC,aAAa,IAAG;QACrBH,KAAK,CAAC,cAAc,CAAC;MACvB;KAIA,CAAC,CAAC;EAGJ;EAEAC,qBAAqBA,CAACF,IAAS;IAI7BK,YAAY,CAACC,OAAO,CAAC,MAAM,EAACC,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,CAAC;EACnD;EAEAT,uBAAuBA,CAAA;IAErB,MAAMkB,QAAQ,GAAEJ,YAAY,CAACK,OAAO,CAAC,MAAM,CAAC;IAC5C,IAAGD,QAAQ,EACX,OAAOF,IAAI,CAACI,KAAK,CAACF,QAAQ,CAAS;IAEnC,OAAO,IAAIxB,IAAI,EAAE;EACnB;EAGA2B,MAAMA,CAAA;IACJ,IAAI,CAACtB,WAAW,CAACS,IAAI,CAAC,IAAId,IAAI,EAAE,CAAC;IACjCoB,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAG1B;EAEAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACzB,cAAc;EAC5B;;AAhEWN,WAAW,C;mBAAXA,WAAW,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXnC,WAAW,C;SAAXA,WAAW;EAAAoC,OAAA,EAAXpC,WAAW,CAAAqC,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}