{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, Input, EventEmitter, Output, forwardRef, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nfunction StarRatingComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.labelText);\n  }\n}\nfunction StarRatingComponent_div_3_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"star-empty \", ctx_r3.classEmpty, \"\");\n  }\n}\nfunction StarRatingComponent_div_3_i_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"star-half \", ctx_r4.classHalf, \"\");\n  }\n}\nfunction StarRatingComponent_div_3_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"star-filled \", ctx_r5.classFilled, \"\");\n  }\n}\nfunction StarRatingComponent_div_3__svg_svg_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 10);\n    i0.ɵɵelement(1, \"use\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", ctx_r6.pathEmpty, null, \"xlink\");\n  }\n}\nfunction StarRatingComponent_div_3__svg_svg_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 12);\n    i0.ɵɵelement(1, \"use\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", ctx_r7.pathHalf, null, \"xlink\");\n  }\n}\nfunction StarRatingComponent_div_3__svg_svg_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 13);\n    i0.ɵɵelement(1, \"use\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", ctx_r8.pathFilled, null, \"xlink\");\n  }\n}\nfunction StarRatingComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"mouseenter\", function StarRatingComponent_div_3_Template_div_mouseenter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const star_r2 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onStarHover(star_r2));\n    })(\"click\", function StarRatingComponent_div_3_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const star_r2 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onStarClicked(star_r2));\n    });\n    i0.ɵɵtemplate(1, StarRatingComponent_div_3_i_1_Template, 1, 3, \"i\", 6);\n    i0.ɵɵtemplate(2, StarRatingComponent_div_3_i_2_Template, 1, 3, \"i\", 6);\n    i0.ɵɵtemplate(3, StarRatingComponent_div_3_i_3_Template, 1, 3, \"i\", 6);\n    i0.ɵɵtemplate(4, StarRatingComponent_div_3__svg_svg_4_Template, 2, 1, \"svg\", 7);\n    i0.ɵɵtemplate(5, StarRatingComponent_div_3__svg_svg_5_Template, 2, 1, \"svg\", 8);\n    i0.ɵɵtemplate(6, StarRatingComponent_div_3__svg_svg_6_Template, 2, 1, \"svg\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.svgVisible());\n  }\n}\nfunction StarRatingControlComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.labelText);\n  }\n}\nfunction StarRatingControlComponent_div_3_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"star-empty \", ctx_r3.classEmpty, \"\");\n  }\n}\nfunction StarRatingControlComponent_div_3_i_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"star-half \", ctx_r4.classHalf, \"\");\n  }\n}\nfunction StarRatingControlComponent_div_3_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"star-filled \", ctx_r5.classFilled, \"\");\n  }\n}\nfunction StarRatingControlComponent_div_3__svg_svg_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 10);\n    i0.ɵɵelement(1, \"use\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", ctx_r6.pathEmpty, null, \"xlink\");\n  }\n}\nfunction StarRatingControlComponent_div_3__svg_svg_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 12);\n    i0.ɵɵelement(1, \"use\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", ctx_r7.pathHalf, null, \"xlink\");\n  }\n}\nfunction StarRatingControlComponent_div_3__svg_svg_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 13);\n    i0.ɵɵelement(1, \"use\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", ctx_r8.pathFilled, null, \"xlink\");\n  }\n}\nfunction StarRatingControlComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"mouseenter\", function StarRatingControlComponent_div_3_Template_div_mouseenter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const star_r2 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onStarHover(star_r2));\n    })(\"click\", function StarRatingControlComponent_div_3_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const star_r2 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onStarClicked(star_r2));\n    });\n    i0.ɵɵtemplate(1, StarRatingControlComponent_div_3_i_1_Template, 1, 3, \"i\", 6);\n    i0.ɵɵtemplate(2, StarRatingControlComponent_div_3_i_2_Template, 1, 3, \"i\", 6);\n    i0.ɵɵtemplate(3, StarRatingControlComponent_div_3_i_3_Template, 1, 3, \"i\", 6);\n    i0.ɵɵtemplate(4, StarRatingControlComponent_div_3__svg_svg_4_Template, 2, 1, \"svg\", 7);\n    i0.ɵɵtemplate(5, StarRatingControlComponent_div_3__svg_svg_5_Template, 2, 1, \"svg\", 8);\n    i0.ɵɵtemplate(6, StarRatingControlComponent_div_3__svg_svg_6_Template, 2, 1, \"svg\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.svgVisible());\n  }\n}\nclass StarRatingConfig {}\nclass StarRatingUtils {\n  //Static methods\n  ///////////////////////////////////////////////////////////////////////////////////////////\n  /*\n   * getStarsArray\n   *\n   * returns an array of increasing numbers starting at 1\n   *\n   * @param numOfStars\n   * @returns {Array}\n   */\n  static getStarsArray(numOfStars) {\n    const stars = [];\n    for (let i = 0; i < numOfStars; i++) {\n      stars.push(i + 1);\n    }\n    return stars;\n  }\n  /*\n   * getHalfStarVisible\n   *\n   * Returns true if there should be a half star visible, and false if not.\n   *\n   * @param rating\n   * @returns {boolean}\n   */\n  static getHalfStarVisible(rating) {\n    return Math.abs(rating % 1) > 0;\n  }\n  /*\n   * getColor\n   *\n   * The default function for color calculation\n   * based on the current rating and the the number of stars possible.\n   * If a staticColor is set the function will use it as return value.\n   *\n   * @param rating\n   * @param numOfStars\n   * @param staticColor\n   * @returns {starRatingColor}\n   */\n  static getColor(rating, numOfStars, staticColor) {\n    rating = rating || 0;\n    //if a fix color is set use this one\n    if (staticColor) {\n      return staticColor;\n    }\n    //calculate size of smallest fraction\n    const fractionSize = numOfStars / 3;\n    //apply color by fraction\n    let color = 'default';\n    if (rating > 0) {\n      color = 'negative';\n    }\n    if (rating > fractionSize) {\n      color = 'ok';\n    }\n    if (rating > fractionSize * 2) {\n      color = 'positive';\n    }\n    return color;\n  }\n  /*\n   * isDigitKeyEventCode\n   * detects digit key event sodes\n   * @param eventCode\n   * @returns {boolean}\n   */\n  static isDigitKeyEventCode(eventCode) {\n    return eventCode.indexOf('Digit') === 0;\n  }\n}\n\n/**\n * Configuration service for the StarRating component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the star ratings used in the application.\n */\nclass StarRatingConfigService {\n  constructor() {\n    this._classEmpty = 'default-star-empty-icon';\n    this._classHalf = 'default-star-half-icon';\n    this._classFilled = 'default-star-filled-icon';\n    this._numOfStars = 5;\n    this._size = 'medium';\n    this._labelPosition = 'left';\n    this._speed = 'noticeable';\n    this._starType = 'svg';\n    this._assetsPath = 'assets/images/';\n    this._svgPath = this.assetsPath + 'star-rating.icons.svg';\n    this._svgEmptySymbolId = 'star-empty';\n    this._svgHalfSymbolId = 'star-half';\n    this._svgFilledSymbolId = 'star-filled';\n    this._svgPathEmpty = this.svgPath + '#' + this.svgEmptySymbolId;\n    this._svgPathHalf = this.svgPath + '#' + this.svgHalfSymbolId;\n    this._svgPathFilled = this.svgPath + '#' + this.svgFilledSymbolId;\n  }\n  get classEmpty() {\n    return this._classEmpty;\n  }\n  set classEmpty(classEmpty) {\n    this._classEmpty = classEmpty;\n  }\n  get classHalf() {\n    return this._classHalf;\n  }\n  set classHalf(classHalf) {\n    this._classHalf = classHalf;\n  }\n  get classFilled() {\n    return this._classFilled;\n  }\n  set classFilled(classFilled) {\n    this._classFilled = classFilled;\n  }\n  get numOfStars() {\n    return this._numOfStars;\n  }\n  set numOfStars(numOfStars) {\n    this._numOfStars = numOfStars;\n  }\n  get size() {\n    return this._size;\n  }\n  set size(size) {\n    this._size = size;\n  }\n  get staticColor() {\n    return this._staticColor;\n  }\n  set staticColor(value) {\n    this._staticColor = value;\n  }\n  get labelPosition() {\n    return this._labelPosition;\n  }\n  set labelPosition(labelPosition) {\n    this._labelPosition = labelPosition;\n  }\n  get speed() {\n    return this._speed;\n  }\n  set speed(speed) {\n    this._speed = speed;\n  }\n  get starType() {\n    return this._starType;\n  }\n  set starType(starType) {\n    this._starType = starType;\n  }\n  get assetsPath() {\n    return this._assetsPath;\n  }\n  set assetsPath(assetsPath) {\n    this._assetsPath = assetsPath;\n  }\n  get svgPath() {\n    return this._svgPath;\n  }\n  set svgPath(svgPath) {\n    this._svgPath = svgPath;\n  }\n  get svgEmptySymbolId() {\n    return this._svgEmptySymbolId;\n  }\n  set svgEmptySymbolId(svgEmptySymbolId) {\n    this._svgEmptySymbolId = svgEmptySymbolId;\n  }\n  get svgHalfSymbolId() {\n    return this._svgHalfSymbolId;\n  }\n  set svgHalfSymbolId(svgHalfSymbolId) {\n    this._svgHalfSymbolId = svgHalfSymbolId;\n  }\n  get svgFilledSymbolId() {\n    return this._svgFilledSymbolId;\n  }\n  set svgFilledSymbolId(svgFilledSymbolId) {\n    this._svgFilledSymbolId = svgFilledSymbolId;\n  }\n  get svgPathEmpty() {\n    return this._svgPathEmpty;\n  }\n  set svgPathEmpty(svgPathEmpty) {\n    this._svgPathEmpty = svgPathEmpty;\n  }\n  get svgPathHalf() {\n    return this._svgPathHalf;\n  }\n  set svgPathHalf(svgPathHalf) {\n    this._svgPathHalf = svgPathHalf;\n  }\n  get svgPathFilled() {\n    return this._svgPathFilled;\n  }\n  set svgPathFilled(svgPathFilled) {\n    this._svgPathFilled = svgPathFilled;\n  }\n  getColor(rating, numOfStars, staticColor) {\n    rating = rating || 0;\n    // if a fix color is set use this one\n    if (staticColor) {\n      return staticColor;\n    }\n    // calculate size of smallest fraction\n    const fractionSize = numOfStars / 3;\n    // apply color by fraction\n    let color = 'default';\n    if (rating > 0) {\n      color = 'negative';\n    }\n    if (rating > fractionSize) {\n      color = 'ok';\n    }\n    if (rating > fractionSize * 2) {\n      color = 'positive';\n    }\n    return color;\n  }\n  getHalfStarVisible(rating) {\n    return Math.abs(rating % 1) > 0;\n  }\n}\n\n/* eslint-disable @angular-eslint/component-class-suffix */\nclass StarRating {\n  constructor(config) {\n    this.config = config;\n    //set default ctrl props\n    this.classEmpty = this.config.classEmpty;\n    this.classHalf = this.config.classHalf;\n    this.classFilled = this.config.classFilled;\n    this.pathEmpty = this.config.svgPathEmpty;\n    this.pathHalf = this.config.svgPathHalf;\n    this.pathFilled = this.config.svgPathFilled;\n    //set default Component Inputs\n    if ('getColor' in this.config && typeof this.config.getColor === 'function') {\n      this.getColor = this.config.getColor;\n    }\n    if ('getHalfStarVisible' in this.config && typeof this.config.getHalfStarVisible === 'function') {\n      this.getHalfStarVisible = this.config.getHalfStarVisible;\n    }\n    this.numOfStars = this.config.numOfStars;\n    this.rating = 0;\n    this.step = 1;\n  }\n  get showHalfStars() {\n    return this._showHalfStars;\n  }\n  set showHalfStars(value) {\n    this._showHalfStars = !!value;\n    //update halfStarVisible\n    this.setHalfStarVisible();\n  }\n  get id() {\n    return this._id;\n  }\n  set id(value) {\n    this._id = value || '';\n  }\n  get focus() {\n    return this._focus;\n  }\n  set focus(value) {\n    this._focus = !!value;\n  }\n  get labelText() {\n    return this._labelText;\n  }\n  set labelText(value) {\n    this._labelText = value;\n  }\n  get labelPosition() {\n    return this._labelPosition;\n  }\n  set labelPosition(value) {\n    this._labelPosition = value || this.config.labelPosition;\n  }\n  get labelVisible() {\n    return this._labelVisible;\n  }\n  set labelVisible(value) {\n    this._labelVisible = !!value;\n  }\n  get hoverEnabled() {\n    return this._hoverEnabled;\n  }\n  set hoverEnabled(value) {\n    this._hoverEnabled = value !== undefined ? !!value : false;\n  }\n  get staticColor() {\n    return this._staticColor || this.config.staticColor || undefined;\n  }\n  set staticColor(value) {\n    this._staticColor = value;\n    //update color.\n    this.setColor();\n  }\n  get direction() {\n    return this._direction;\n  }\n  set direction(value) {\n    this._direction = value || undefined;\n  }\n  get numOfStars() {\n    return this._numOfStars;\n  }\n  set numOfStars(value) {\n    this._numOfStars = value > 0 ? value : this.config.numOfStars;\n    //update stars array\n    this.stars = StarRatingUtils.getStarsArray(this.numOfStars);\n    //update color\n    this.setColor();\n  }\n  get hoverRating() {\n    return this._hoverRating;\n  }\n  set hoverRating(value) {\n    this._hoverRating = value > 0 ? value : 0;\n  }\n  get speed() {\n    return this._speed;\n  }\n  set speed(value) {\n    this._speed = value || this.config.speed;\n  }\n  get size() {\n    return this._size || this.config.size;\n  }\n  set size(value) {\n    this._size = value;\n  }\n  get starType() {\n    return this._starType || this.config.starType;\n  }\n  set starType(value) {\n    this._starType = value;\n  }\n  get space() {\n    return this._space;\n  }\n  set space(value) {\n    this._space = value;\n  }\n  get readOnly() {\n    return this._readOnly;\n  }\n  set readOnly(value) {\n    this._readOnly = !!value;\n  }\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = !!value;\n  }\n  get step() {\n    return this._step;\n  }\n  set step(value) {\n    this._step = value > 0 ? value : 1;\n  }\n  get rating() {\n    return this._rating;\n  }\n  set rating(value) {\n    this.setRating(value);\n  }\n  /**\n   * setRating\n   * I use a setter function instead of a set method to enable overrides for this function.\n   * @param value\n   */\n  setRating(value) {\n    //validate and apply newRating\n    let newRating = 0;\n    if (value >= 0 && value <= this.numOfStars) {\n      newRating = value;\n    }\n    //limit max value to max number of stars\n    if (value > this.numOfStars) {\n      newRating = this.numOfStars;\n    }\n    this._rating = newRating;\n    //update ratingAsInteger. rating parsed to int for the value-[n] modifier\n    this.ratingAsInteger = parseInt(this._rating?.toString(), 10);\n    //update halfStarsVisible\n    this.setHalfStarVisible();\n    //update calculated Color\n    this.setColor();\n  }\n  svgVisible() {\n    return this.starType === 'svg';\n  }\n  interactionPossible() {\n    return !this.readOnly && !this.disabled;\n  }\n  setColor(useHoverValue = false) {\n    //check if custom function is given\n    const ratingValue = useHoverValue ? this.hoverRating : this.rating;\n    if (typeof this.getColor === 'function') {\n      this.color = this.getColor(ratingValue, this.numOfStars, this.staticColor);\n    } else {\n      this.color = StarRatingUtils.getColor(ratingValue, this.numOfStars, this.staticColor);\n    }\n  }\n  setHalfStarVisible() {\n    //update halfStarVisible\n    if (this.showHalfStars) {\n      //check if custom function is given\n      if (typeof this.getHalfStarVisible === 'function') {\n        this.halfStarVisible = this.getHalfStarVisible(this.rating);\n      } else {\n        this.halfStarVisible = StarRatingUtils.getHalfStarVisible(this.rating);\n      }\n    } else {\n      this.halfStarVisible = false;\n    }\n  }\n  getComponentClassNames() {\n    const classNames = [];\n    classNames.push(this.rating ? 'value-' + this.ratingAsInteger : 'value-0');\n    classNames.push(this.halfStarVisible ? 'half' : '');\n    classNames.push(this.hoverEnabled ? 'hover' : '');\n    const hoverRating = this.hoverRating ? 'hover-' + this.hoverRating : 'hover-0';\n    classNames.push(this.hoverEnabled ? hoverRating : '');\n    classNames.push(this.space ? 'space-' + this.space : '');\n    classNames.push(this.labelPosition ? 'label-' + this.labelPosition : '');\n    classNames.push(this.color ? 'color-' + this.color : '');\n    classNames.push(this.starType ? 'star-' + this.starType : '');\n    classNames.push(this.speed);\n    classNames.push(this.size);\n    classNames.push(this.readOnly ? 'read-only' : '');\n    classNames.push(this.disabled ? 'disabled' : '');\n    classNames.push(this.direction ? 'direction-' + this.direction : '');\n    return classNames.join(' ');\n  }\n  increment() {\n    //increment to next higher step\n    const absDiff = Math.abs(this.rating % this.step);\n    this.rating = this.rating + (absDiff > 0 ? this.step - absDiff : this.step);\n  }\n  decrement() {\n    //decrement to next lower step\n    const absDiff = Math.abs(this.rating % this.step);\n    this.rating = this.rating - (absDiff > 0 ? absDiff : this.step);\n  }\n  reset() {\n    this.rating = 0;\n  }\n}\nStarRating.ɵfac = function StarRating_Factory(t) {\n  return new (t || StarRating)(i0.ɵɵdirectiveInject(StarRatingConfigService));\n};\nStarRating.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StarRating,\n  selectors: [[\"placeholder-star-rating\"]],\n  inputs: {\n    showHalfStars: \"showHalfStars\",\n    id: \"id\",\n    focus: \"focus\",\n    labelText: \"labelText\",\n    labelPosition: \"labelPosition\",\n    labelVisible: \"labelVisible\",\n    hoverEnabled: \"hoverEnabled\",\n    staticColor: \"staticColor\",\n    direction: \"direction\",\n    numOfStars: \"numOfStars\",\n    hoverRating: \"hoverRating\",\n    speed: \"speed\",\n    size: \"size\",\n    starType: \"starType\",\n    space: \"space\",\n    readOnly: \"readOnly\",\n    disabled: \"disabled\",\n    step: \"step\",\n    rating: \"rating\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function StarRating_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StarRating, [{\n    type: Component,\n    args: [{\n      // Metadata needed for Angular.\n      template: ``,\n      selector: 'placeholder-star-rating'\n    }]\n  }], function () {\n    return [{\n      type: StarRatingConfigService\n    }];\n  }, {\n    showHalfStars: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    focus: [{\n      type: Input\n    }],\n    labelText: [{\n      type: Input\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    labelVisible: [{\n      type: Input\n    }],\n    hoverEnabled: [{\n      type: Input\n    }],\n    staticColor: [{\n      type: Input\n    }],\n    direction: [{\n      type: Input\n    }],\n    numOfStars: [{\n      type: Input\n    }],\n    hoverRating: [{\n      type: Input\n    }],\n    speed: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    starType: [{\n      type: Input\n    }],\n    space: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    rating: [{\n      type: Input\n    }]\n  });\n})();\nclass StarRatingComponent extends StarRating {\n  constructor(config) {\n    super(config);\n    this.starClickChange = new EventEmitter();\n    this.ratingChange = new EventEmitter();\n    this.hoverRatingChange = new EventEmitter();\n  }\n  saveOnClick($event) {\n    if (this.starClickChange) {\n      this.starClickChange.emit($event);\n    }\n  }\n  saveOnRatingChange($event) {\n    if (this.ratingChange) {\n      this.ratingChange.emit($event);\n    }\n  }\n  saveOnHover($event) {\n    if (this.hoverRatingChange) {\n      this.hoverRatingChange.emit($event);\n    }\n  }\n  /**ACCESSIBILITY **/\n  //Keyboard events\n  onKeyDown(event) {\n    if (!this.interactionPossible()) {\n      return;\n    }\n    const handlers = {\n      //Decrement\n      Minus: () => this.decrement(),\n      ArrowDown: () => this.decrement(),\n      ArrowLeft: () => this.decrement(),\n      //Increment\n      Plus: () => this.increment(),\n      ArrowRight: () => this.increment(),\n      ArrowUp: () => this.increment(),\n      //Reset\n      Backspace: () => this.reset(),\n      Delete: () => this.reset(),\n      Digit0: () => this.reset()\n    };\n    const handleDigits = eventCode => {\n      const dStr = 'Digit';\n      const digit = parseInt(eventCode.substr(dStr.length, eventCode.length - 1), 10);\n      this.rating = digit;\n    };\n    if (handlers[event['code']] || StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n      if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n        handleDigits(event['code']);\n      } else {\n        handlers[event['code']]();\n      }\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  //Hover events\n  onStarHover(rating) {\n    if (!this.interactionPossible() || !this.hoverEnabled) {\n      return;\n    }\n    this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0;\n    //update calculated Color\n    this.setColor(true);\n    //fire onHoverRatingChange event\n    const $event = {\n      hoverRating: this.hoverRating\n    };\n    this.saveOnHover($event);\n  }\n  onStopHover() {\n    if (!this.interactionPossible() || !this.hoverEnabled) {\n      return;\n    }\n    this.hoverRating = 0;\n    //update calculated Color\n    this.setColor();\n  }\n  //Overrides\n  setRating(value) {\n    const initValue = this.rating;\n    super.setRating(value);\n    //if value changed trigger valueAccessor events and outputs\n    if (initValue !== this.rating) {\n      const $event = {\n        rating: this.rating\n      };\n      this.saveOnRatingChange($event);\n    }\n  }\n  /**\n   * onStarClicked\n   *\n   * Is fired when a star is clicked. And updated the rating value.\n   * This function returns if the disabled or readOnly\n   * property is set. If provided it emits the onClick event\n   * handler with the actual rating value.\n   *\n   * @param rating\n   */\n  onStarClicked(rating) {\n    //fire onClick event\n    if (!this.interactionPossible()) {\n      return;\n    }\n    this.rating = rating;\n    const onClickEventObject = {\n      rating: this.rating\n    };\n    this.saveOnClick(onClickEventObject);\n  }\n}\nStarRatingComponent.ɵfac = function StarRatingComponent_Factory(t) {\n  return new (t || StarRatingComponent)(i0.ɵɵdirectiveInject(StarRatingConfigService));\n};\nStarRatingComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StarRatingComponent,\n  selectors: [[\"star-rating\"]],\n  inputs: {\n    getHalfStarVisible: \"getHalfStarVisible\",\n    getColor: \"getColor\"\n  },\n  outputs: {\n    starClickChange: \"starClickChange\",\n    ratingChange: \"ratingChange\",\n    hoverRatingChange: \"hoverRatingChange\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 6,\n  consts: [[\"tabindex\", \"0\", 3, \"id\", \"keydown\", \"mouseleave\"], [\"class\", \"label-value\", 4, \"ngIf\"], [1, \"star-container\"], [\"class\", \"star\", 3, \"mouseenter\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"label-value\"], [1, \"star\", 3, \"mouseenter\", \"click\"], [3, \"class\", 4, \"ngIf\"], [\"class\", \"star-empty\", 4, \"ngIf\"], [\"class\", \"star-half\", 4, \"ngIf\"], [\"class\", \"star-filled\", 4, \"ngIf\"], [1, \"star-empty\"], [0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\"], [1, \"star-half\"], [1, \"star-filled\"]],\n  template: function StarRatingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"keydown\", function StarRatingComponent_Template_div_keydown_0_listener($event) {\n        return ctx.onKeyDown($event);\n      })(\"mouseleave\", function StarRatingComponent_Template_div_mouseleave_0_listener() {\n        return ctx.onStopHover();\n      });\n      i0.ɵɵtemplate(1, StarRatingComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, StarRatingComponent_div_3_Template, 7, 6, \"div\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMapInterpolate1(\"rating \", ctx.getComponentClassNames(), \"\");\n      i0.ɵɵpropertyInterpolate(\"id\", ctx.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.labelText);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stars);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StarRatingComponent, [{\n    type: Component,\n    args: [{\n      selector: 'star-rating',\n      template: \"<div id=\\\"{{id}}\\\" class=\\\"rating {{getComponentClassNames()}}\\\" tabindex=\\\"0\\\"\\n  (keydown)=\\\"onKeyDown($event)\\\" (mouseleave)=\\\"onStopHover()\\\">\\n  <div *ngIf=\\\"labelText\\\" class=\\\"label-value\\\">{{labelText}}</div>\\n  <div class=\\\"star-container\\\">\\n    <div class=\\\"star\\\" (mouseenter)=\\\"onStarHover(star)\\\"\\n      *ngFor=\\\"let star of stars\\\" (click)=\\\"onStarClicked(star)\\\">\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-empty {{classEmpty}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-half {{classHalf}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-filled {{classFilled}}\\\"></i>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-empty\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathEmpty\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-half\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathHalf\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-filled\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathFilled\\\"></use>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: StarRatingConfigService\n    }];\n  }, {\n    getHalfStarVisible: [{\n      type: Input\n    }],\n    getColor: [{\n      type: Input\n    }],\n    starClickChange: [{\n      type: Output\n    }],\n    ratingChange: [{\n      type: Output\n    }],\n    hoverRatingChange: [{\n      type: Output\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst STAR_RATING_CONTROL_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => StarRatingControlComponent),\n  multi: true\n};\nclass StarRatingControlComponent extends StarRating {\n  constructor(config) {\n    super(config);\n    this.starClickChange = new EventEmitter();\n    this.ratingChange = new EventEmitter();\n    this.hoverRatingChange = new EventEmitter();\n    this.onModelChangeRegistered = false;\n    this.onTouchRegistered = false;\n  }\n  saveOnClick($event) {\n    if (this.starClickChange) {\n      this.starClickChange.emit($event);\n    }\n  }\n  saveOnRatingChange($event) {\n    if (this.ratingChange) {\n      this.ratingChange.emit($event);\n    }\n  }\n  saveOnHover($event) {\n    if (this.hoverRatingChange) {\n      this.hoverRatingChange.emit($event);\n    }\n  }\n  saveOnTouch() {\n    if (this.onTouchRegistered) {\n      this.onTouch();\n    }\n  }\n  saveOnModelChange(value) {\n    if (this.onModelChangeRegistered) {\n      this.onModelChange(value);\n    }\n  }\n  /**ACCESSIBILITY **/\n  //Keyboard events\n  onKeyDown(event) {\n    if (!this.interactionPossible()) {\n      return;\n    }\n    const handlers = {\n      //Decrement\n      Minus: () => this.decrement(),\n      ArrowDown: () => this.decrement(),\n      ArrowLeft: () => this.decrement(),\n      //Increment\n      Plus: () => this.increment(),\n      ArrowRight: () => this.increment(),\n      ArrowUp: () => this.increment(),\n      //Reset\n      Backspace: () => this.reset(),\n      Delete: () => this.reset(),\n      Digit0: () => this.reset()\n    };\n    const handleDigits = eventCode => {\n      const dStr = 'Digit';\n      const digit = parseInt(eventCode.substr(dStr.length, eventCode.length - 1), 10);\n      this.rating = digit;\n    };\n    if (handlers[event['code']] || StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n      if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n        handleDigits(event['code']);\n      } else {\n        handlers[event['code']]();\n      }\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.saveOnTouch();\n  }\n  //Focus events\n  onBlur(event) {\n    this.focus = false;\n    event.preventDefault();\n    event.stopPropagation();\n    this.saveOnTouch();\n  }\n  onFocus(event) {\n    this.focus = true;\n    event.preventDefault();\n    event.stopPropagation();\n    this.saveOnTouch();\n  }\n  //Hover events\n  onStarHover(rating) {\n    if (!this.interactionPossible() || !this.hoverEnabled) {\n      return;\n    }\n    this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0;\n    //fire onHoverRatingChange event\n    const $event = {\n      hoverRating: this.hoverRating\n    };\n    this.saveOnHover($event);\n  }\n  /**Form Control - ControlValueAccessor implementation**/\n  writeValue(obj) {\n    this.rating = obj;\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n    this.onModelChangeRegistered = true;\n  }\n  registerOnTouched(fn) {\n    this.onTouch = fn;\n    this.onTouchRegistered = true;\n  }\n  //Overrides\n  setRating(value) {\n    const initValue = this.rating;\n    super.setRating(value);\n    //if value changed trigger valueAccessor events and outputs\n    if (initValue !== this.rating) {\n      const $event = {\n        rating: this.rating\n      };\n      this.saveOnRatingChange($event);\n      this.saveOnModelChange(this.rating);\n    }\n  }\n  /**\n   * onStarClicked\n   *\n   * Is fired when a star is clicked. And updated the rating value.\n   * This function returns if the disabled or readOnly\n   * property is set. If provided it emits the onClick event\n   * handler with the actual rating value.\n   *\n   * @param rating\n   */\n  onStarClicked(rating) {\n    //fire onClick event\n    if (!this.interactionPossible()) {\n      return;\n    }\n    this.rating = rating;\n    const onClickEventObject = {\n      rating: this.rating\n    };\n    this.saveOnClick(onClickEventObject);\n  }\n}\nStarRatingControlComponent.ɵfac = function StarRatingControlComponent_Factory(t) {\n  return new (t || StarRatingControlComponent)(i0.ɵɵdirectiveInject(StarRatingConfigService));\n};\nStarRatingControlComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StarRatingControlComponent,\n  selectors: [[\"star-rating-control\"]],\n  outputs: {\n    starClickChange: \"starClickChange\",\n    ratingChange: \"ratingChange\",\n    hoverRatingChange: \"hoverRatingChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([STAR_RATING_CONTROL_ACCESSOR]), i0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 6,\n  consts: [[\"tabindex\", \"0\", 3, \"id\", \"keydown\", \"blur\", \"focus\", \"mouseleave\"], [\"class\", \"label-value\", 4, \"ngIf\"], [1, \"star-container\"], [\"class\", \"star\", 3, \"mouseenter\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"label-value\"], [1, \"star\", 3, \"mouseenter\", \"click\"], [3, \"class\", 4, \"ngIf\"], [\"class\", \"star-empty\", 4, \"ngIf\"], [\"class\", \"star-half\", 4, \"ngIf\"], [\"class\", \"star-filled\", 4, \"ngIf\"], [1, \"star-empty\"], [0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\"], [1, \"star-half\"], [1, \"star-filled\"]],\n  template: function StarRatingControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"keydown\", function StarRatingControlComponent_Template_div_keydown_0_listener($event) {\n        return ctx.onKeyDown($event);\n      })(\"blur\", function StarRatingControlComponent_Template_div_blur_0_listener($event) {\n        return ctx.onBlur($event);\n      })(\"focus\", function StarRatingControlComponent_Template_div_focus_0_listener($event) {\n        return ctx.onFocus($event);\n      })(\"mouseleave\", function StarRatingControlComponent_Template_div_mouseleave_0_listener() {\n        return ctx.onStarHover(0);\n      });\n      i0.ɵɵtemplate(1, StarRatingControlComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, StarRatingControlComponent_div_3_Template, 7, 6, \"div\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMapInterpolate1(\"rating \", ctx.getComponentClassNames(), \"\");\n      i0.ɵɵpropertyInterpolate(\"id\", ctx.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.labelText);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stars);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StarRatingControlComponent, [{\n    type: Component,\n    args: [{\n      selector: 'star-rating-control',\n      providers: [STAR_RATING_CONTROL_ACCESSOR],\n      template: \"<div id=\\\"{{id}}\\\" class=\\\"rating {{getComponentClassNames()}}\\\" tabindex=\\\"0\\\"\\n  (keydown)=\\\"onKeyDown($event)\\\" (blur)=\\\"onBlur($event)\\\"\\n  (focus)=\\\"onFocus($event)\\\" (mouseleave)=\\\"onStarHover(0)\\\">\\n  <div *ngIf=\\\"labelText\\\" class=\\\"label-value\\\">{{labelText}}</div>\\n  <div class=\\\"star-container\\\">\\n    <div class=\\\"star\\\" (mouseenter)=\\\"onStarHover(star)\\\"\\n      *ngFor=\\\"let star of stars\\\" (click)=\\\"onStarClicked(star)\\\">\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-empty {{classEmpty}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-half {{classHalf}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-filled {{classFilled}}\\\"></i>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-empty\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathEmpty\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-half\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathHalf\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-filled\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathFilled\\\"></use>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: StarRatingConfigService\n    }];\n  }, {\n    starClickChange: [{\n      type: Output\n    }],\n    ratingChange: [{\n      type: Output\n    }],\n    hoverRatingChange: [{\n      type: Output\n    }]\n  });\n})();\nconst DECLARATIONS = [StarRatingComponent, StarRatingControlComponent];\nconst EXPORTS = [DECLARATIONS];\nclass StarRatingModule {\n  static forRoot() {\n    return {\n      ngModule: StarRatingModule,\n      providers: [StarRatingConfigService]\n    };\n  }\n  static forChild() {\n    return {\n      ngModule: StarRatingModule,\n      providers: []\n    };\n  }\n}\nStarRatingModule.ɵfac = function StarRatingModule_Factory(t) {\n  return new (t || StarRatingModule)();\n};\nStarRatingModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StarRatingModule\n});\nStarRatingModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StarRatingModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [DECLARATIONS],\n      exports: [EXPORTS]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { StarRating, StarRatingComponent, StarRatingConfig, StarRatingConfigService, StarRatingControlComponent, StarRatingModule, StarRatingUtils };","map":{"version":3,"names":["i0","Component","Input","EventEmitter","Output","forwardRef","NgModule","i2","CommonModule","NG_VALUE_ACCESSOR","StarRatingComponent_div_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","labelText","StarRatingComponent_div_3_i_1_Template","ɵɵelement","ctx_r3","ɵɵclassMapInterpolate1","classEmpty","StarRatingComponent_div_3_i_2_Template","ctx_r4","classHalf","StarRatingComponent_div_3_i_3_Template","ctx_r5","classFilled","StarRatingComponent_div_3__svg_svg_4_Template","ɵɵnamespaceSVG","ctx_r6","ɵɵattribute","pathEmpty","StarRatingComponent_div_3__svg_svg_5_Template","ctx_r7","pathHalf","StarRatingComponent_div_3__svg_svg_6_Template","ctx_r8","pathFilled","StarRatingComponent_div_3_Template","_r10","ɵɵgetCurrentView","ɵɵlistener","StarRatingComponent_div_3_Template_div_mouseenter_0_listener","restoredCtx","ɵɵrestoreView","star_r2","$implicit","ctx_r9","ɵɵresetView","onStarHover","StarRatingComponent_div_3_Template_div_click_0_listener","ctx_r11","onStarClicked","ɵɵtemplate","ctx_r1","ɵɵproperty","svgVisible","StarRatingControlComponent_div_1_Template","StarRatingControlComponent_div_3_i_1_Template","StarRatingControlComponent_div_3_i_2_Template","StarRatingControlComponent_div_3_i_3_Template","StarRatingControlComponent_div_3__svg_svg_4_Template","StarRatingControlComponent_div_3__svg_svg_5_Template","StarRatingControlComponent_div_3__svg_svg_6_Template","StarRatingControlComponent_div_3_Template","StarRatingControlComponent_div_3_Template_div_mouseenter_0_listener","StarRatingControlComponent_div_3_Template_div_click_0_listener","StarRatingConfig","StarRatingUtils","getStarsArray","numOfStars","stars","i","push","getHalfStarVisible","rating","Math","abs","getColor","staticColor","fractionSize","color","isDigitKeyEventCode","eventCode","indexOf","StarRatingConfigService","constructor","_classEmpty","_classHalf","_classFilled","_numOfStars","_size","_labelPosition","_speed","_starType","_assetsPath","_svgPath","assetsPath","_svgEmptySymbolId","_svgHalfSymbolId","_svgFilledSymbolId","_svgPathEmpty","svgPath","svgEmptySymbolId","_svgPathHalf","svgHalfSymbolId","_svgPathFilled","svgFilledSymbolId","size","_staticColor","value","labelPosition","speed","starType","svgPathEmpty","svgPathHalf","svgPathFilled","StarRating","config","step","showHalfStars","_showHalfStars","setHalfStarVisible","id","_id","focus","_focus","_labelText","labelVisible","_labelVisible","hoverEnabled","_hoverEnabled","undefined","setColor","direction","_direction","hoverRating","_hoverRating","space","_space","readOnly","_readOnly","disabled","_disabled","_step","_rating","setRating","newRating","ratingAsInteger","parseInt","toString","interactionPossible","useHoverValue","ratingValue","halfStarVisible","getComponentClassNames","classNames","join","increment","absDiff","decrement","reset","ɵfac","StarRating_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","decls","vars","template","StarRating_Template","encapsulation","ngDevMode","ɵsetClassMetadata","args","selector","StarRatingComponent","starClickChange","ratingChange","hoverRatingChange","saveOnClick","$event","emit","saveOnRatingChange","saveOnHover","onKeyDown","event","handlers","Minus","ArrowDown","ArrowLeft","Plus","ArrowRight","ArrowUp","Backspace","Delete","Digit0","handleDigits","dStr","digit","substr","length","preventDefault","stopPropagation","onStopHover","initValue","onClickEventObject","StarRatingComponent_Factory","outputs","features","ɵɵInheritDefinitionFeature","consts","StarRatingComponent_Template","StarRatingComponent_Template_div_keydown_0_listener","StarRatingComponent_Template_div_mouseleave_0_listener","ɵɵpropertyInterpolate","dependencies","NgForOf","NgIf","STAR_RATING_CONTROL_ACCESSOR","provide","useExisting","StarRatingControlComponent","multi","onModelChangeRegistered","onTouchRegistered","saveOnTouch","onTouch","saveOnModelChange","onModelChange","onBlur","onFocus","writeValue","obj","registerOnChange","fn","registerOnTouched","StarRatingControlComponent_Factory","ɵɵProvidersFeature","StarRatingControlComponent_Template","StarRatingControlComponent_Template_div_keydown_0_listener","StarRatingControlComponent_Template_div_blur_0_listener","StarRatingControlComponent_Template_div_focus_0_listener","StarRatingControlComponent_Template_div_mouseleave_0_listener","providers","DECLARATIONS","EXPORTS","StarRatingModule","forRoot","ngModule","forChild","StarRatingModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["D:/Projects/Angular Projects/OnlineFoodDelivery_WebApplication/Food-Delivery-WebApp/node_modules/angular-star-rating/fesm2020/angular-star-rating.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, Input, EventEmitter, Output, forwardRef, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nclass StarRatingConfig {\n}\n\nclass StarRatingUtils {\n    //Static methods\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    /*\n     * getStarsArray\n     *\n     * returns an array of increasing numbers starting at 1\n     *\n     * @param numOfStars\n     * @returns {Array}\n     */\n    static getStarsArray(numOfStars) {\n        const stars = [];\n        for (let i = 0; i < numOfStars; i++) {\n            stars.push(i + 1);\n        }\n        return stars;\n    }\n    /*\n     * getHalfStarVisible\n     *\n     * Returns true if there should be a half star visible, and false if not.\n     *\n     * @param rating\n     * @returns {boolean}\n     */\n    static getHalfStarVisible(rating) {\n        return Math.abs(rating % 1) > 0;\n    }\n    /*\n     * getColor\n     *\n     * The default function for color calculation\n     * based on the current rating and the the number of stars possible.\n     * If a staticColor is set the function will use it as return value.\n     *\n     * @param rating\n     * @param numOfStars\n     * @param staticColor\n     * @returns {starRatingColor}\n     */\n    static getColor(rating, numOfStars, staticColor) {\n        rating = rating || 0;\n        //if a fix color is set use this one\n        if (staticColor) {\n            return staticColor;\n        }\n        //calculate size of smallest fraction\n        const fractionSize = numOfStars / 3;\n        //apply color by fraction\n        let color = 'default';\n        if (rating > 0) {\n            color = 'negative';\n        }\n        if (rating > fractionSize) {\n            color = 'ok';\n        }\n        if (rating > fractionSize * 2) {\n            color = 'positive';\n        }\n        return color;\n    }\n    /*\n     * isDigitKeyEventCode\n     * detects digit key event sodes\n     * @param eventCode\n     * @returns {boolean}\n     */\n    static isDigitKeyEventCode(eventCode) {\n        return eventCode.indexOf('Digit') === 0;\n    }\n}\n\n/**\n * Configuration service for the StarRating component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the star ratings used in the application.\n */\nclass StarRatingConfigService {\n    constructor() {\n        this._classEmpty = 'default-star-empty-icon';\n        this._classHalf = 'default-star-half-icon';\n        this._classFilled = 'default-star-filled-icon';\n        this._numOfStars = 5;\n        this._size = 'medium';\n        this._labelPosition = 'left';\n        this._speed = 'noticeable';\n        this._starType = 'svg';\n        this._assetsPath = 'assets/images/';\n        this._svgPath = this.assetsPath + 'star-rating.icons.svg';\n        this._svgEmptySymbolId = 'star-empty';\n        this._svgHalfSymbolId = 'star-half';\n        this._svgFilledSymbolId = 'star-filled';\n        this._svgPathEmpty = this.svgPath + '#' + this.svgEmptySymbolId;\n        this._svgPathHalf = this.svgPath + '#' + this.svgHalfSymbolId;\n        this._svgPathFilled = this.svgPath + '#' + this.svgFilledSymbolId;\n    }\n    get classEmpty() {\n        return this._classEmpty;\n    }\n    set classEmpty(classEmpty) {\n        this._classEmpty = classEmpty;\n    }\n    get classHalf() {\n        return this._classHalf;\n    }\n    set classHalf(classHalf) {\n        this._classHalf = classHalf;\n    }\n    get classFilled() {\n        return this._classFilled;\n    }\n    set classFilled(classFilled) {\n        this._classFilled = classFilled;\n    }\n    get numOfStars() {\n        return this._numOfStars;\n    }\n    set numOfStars(numOfStars) {\n        this._numOfStars = numOfStars;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(size) {\n        this._size = size;\n    }\n    get staticColor() {\n        return this._staticColor;\n    }\n    set staticColor(value) {\n        this._staticColor = value;\n    }\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(labelPosition) {\n        this._labelPosition = labelPosition;\n    }\n    get speed() {\n        return this._speed;\n    }\n    set speed(speed) {\n        this._speed = speed;\n    }\n    get starType() {\n        return this._starType;\n    }\n    set starType(starType) {\n        this._starType = starType;\n    }\n    get assetsPath() {\n        return this._assetsPath;\n    }\n    set assetsPath(assetsPath) {\n        this._assetsPath = assetsPath;\n    }\n    get svgPath() {\n        return this._svgPath;\n    }\n    set svgPath(svgPath) {\n        this._svgPath = svgPath;\n    }\n    get svgEmptySymbolId() {\n        return this._svgEmptySymbolId;\n    }\n    set svgEmptySymbolId(svgEmptySymbolId) {\n        this._svgEmptySymbolId = svgEmptySymbolId;\n    }\n    get svgHalfSymbolId() {\n        return this._svgHalfSymbolId;\n    }\n    set svgHalfSymbolId(svgHalfSymbolId) {\n        this._svgHalfSymbolId = svgHalfSymbolId;\n    }\n    get svgFilledSymbolId() {\n        return this._svgFilledSymbolId;\n    }\n    set svgFilledSymbolId(svgFilledSymbolId) {\n        this._svgFilledSymbolId = svgFilledSymbolId;\n    }\n    get svgPathEmpty() {\n        return this._svgPathEmpty;\n    }\n    set svgPathEmpty(svgPathEmpty) {\n        this._svgPathEmpty = svgPathEmpty;\n    }\n    get svgPathHalf() {\n        return this._svgPathHalf;\n    }\n    set svgPathHalf(svgPathHalf) {\n        this._svgPathHalf = svgPathHalf;\n    }\n    get svgPathFilled() {\n        return this._svgPathFilled;\n    }\n    set svgPathFilled(svgPathFilled) {\n        this._svgPathFilled = svgPathFilled;\n    }\n    getColor(rating, numOfStars, staticColor) {\n        rating = rating || 0;\n        // if a fix color is set use this one\n        if (staticColor) {\n            return staticColor;\n        }\n        // calculate size of smallest fraction\n        const fractionSize = numOfStars / 3;\n        // apply color by fraction\n        let color = 'default';\n        if (rating > 0) {\n            color = 'negative';\n        }\n        if (rating > fractionSize) {\n            color = 'ok';\n        }\n        if (rating > fractionSize * 2) {\n            color = 'positive';\n        }\n        return color;\n    }\n    getHalfStarVisible(rating) {\n        return Math.abs(rating % 1) > 0;\n    }\n}\n\n/* eslint-disable @angular-eslint/component-class-suffix */\nclass StarRating {\n    constructor(config) {\n        this.config = config;\n        //set default ctrl props\n        this.classEmpty = this.config.classEmpty;\n        this.classHalf = this.config.classHalf;\n        this.classFilled = this.config.classFilled;\n        this.pathEmpty = this.config.svgPathEmpty;\n        this.pathHalf = this.config.svgPathHalf;\n        this.pathFilled = this.config.svgPathFilled;\n        //set default Component Inputs\n        if ('getColor' in this.config &&\n            typeof this.config.getColor === 'function') {\n            this.getColor = this.config.getColor;\n        }\n        if ('getHalfStarVisible' in this.config &&\n            typeof this.config.getHalfStarVisible === 'function') {\n            this.getHalfStarVisible = this.config.getHalfStarVisible;\n        }\n        this.numOfStars = this.config.numOfStars;\n        this.rating = 0;\n        this.step = 1;\n    }\n    get showHalfStars() {\n        return this._showHalfStars;\n    }\n    set showHalfStars(value) {\n        this._showHalfStars = !!value;\n        //update halfStarVisible\n        this.setHalfStarVisible();\n    }\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || '';\n    }\n    get focus() {\n        return this._focus;\n    }\n    set focus(value) {\n        this._focus = !!value;\n    }\n    get labelText() {\n        return this._labelText;\n    }\n    set labelText(value) {\n        this._labelText = value;\n    }\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(value) {\n        this._labelPosition = value || this.config.labelPosition;\n    }\n    get labelVisible() {\n        return this._labelVisible;\n    }\n    set labelVisible(value) {\n        this._labelVisible = !!value;\n    }\n    get hoverEnabled() {\n        return this._hoverEnabled;\n    }\n    set hoverEnabled(value) {\n        this._hoverEnabled = value !== undefined ? !!value : false;\n    }\n    get staticColor() {\n        return this._staticColor || this.config.staticColor || undefined;\n    }\n    set staticColor(value) {\n        this._staticColor = value;\n        //update color.\n        this.setColor();\n    }\n    get direction() {\n        return this._direction;\n    }\n    set direction(value) {\n        this._direction = value || undefined;\n    }\n    get numOfStars() {\n        return this._numOfStars;\n    }\n    set numOfStars(value) {\n        this._numOfStars = value > 0 ? value : this.config.numOfStars;\n        //update stars array\n        this.stars = StarRatingUtils.getStarsArray(this.numOfStars);\n        //update color\n        this.setColor();\n    }\n    get hoverRating() {\n        return this._hoverRating;\n    }\n    set hoverRating(value) {\n        this._hoverRating = value > 0 ? value : 0;\n    }\n    get speed() {\n        return this._speed;\n    }\n    set speed(value) {\n        this._speed = value || this.config.speed;\n    }\n    get size() {\n        return this._size || this.config.size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get starType() {\n        return this._starType || this.config.starType;\n    }\n    set starType(value) {\n        this._starType = value;\n    }\n    get space() {\n        return this._space;\n    }\n    set space(value) {\n        this._space = value;\n    }\n    get readOnly() {\n        return this._readOnly;\n    }\n    set readOnly(value) {\n        this._readOnly = !!value;\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = !!value;\n    }\n    get step() {\n        return this._step;\n    }\n    set step(value) {\n        this._step = value > 0 ? value : 1;\n    }\n    get rating() {\n        return this._rating;\n    }\n    set rating(value) {\n        this.setRating(value);\n    }\n    /**\n     * setRating\n     * I use a setter function instead of a set method to enable overrides for this function.\n     * @param value\n     */\n    setRating(value) {\n        //validate and apply newRating\n        let newRating = 0;\n        if (value >= 0 && value <= this.numOfStars) {\n            newRating = value;\n        }\n        //limit max value to max number of stars\n        if (value > this.numOfStars) {\n            newRating = this.numOfStars;\n        }\n        this._rating = newRating;\n        //update ratingAsInteger. rating parsed to int for the value-[n] modifier\n        this.ratingAsInteger = parseInt(this._rating?.toString(), 10);\n        //update halfStarsVisible\n        this.setHalfStarVisible();\n        //update calculated Color\n        this.setColor();\n    }\n    svgVisible() {\n        return this.starType === 'svg';\n    }\n    interactionPossible() {\n        return !this.readOnly && !this.disabled;\n    }\n    setColor(useHoverValue = false) {\n        //check if custom function is given\n        const ratingValue = useHoverValue ? this.hoverRating : this.rating;\n        if (typeof this.getColor === 'function') {\n            this.color = this.getColor(ratingValue, this.numOfStars, this.staticColor);\n        }\n        else {\n            this.color = StarRatingUtils.getColor(ratingValue, this.numOfStars, this.staticColor);\n        }\n    }\n    setHalfStarVisible() {\n        //update halfStarVisible\n        if (this.showHalfStars) {\n            //check if custom function is given\n            if (typeof this.getHalfStarVisible === 'function') {\n                this.halfStarVisible = this.getHalfStarVisible(this.rating);\n            }\n            else {\n                this.halfStarVisible = StarRatingUtils.getHalfStarVisible(this.rating);\n            }\n        }\n        else {\n            this.halfStarVisible = false;\n        }\n    }\n    getComponentClassNames() {\n        const classNames = [];\n        classNames.push(this.rating ? 'value-' + this.ratingAsInteger : 'value-0');\n        classNames.push(this.halfStarVisible ? 'half' : '');\n        classNames.push(this.hoverEnabled ? 'hover' : '');\n        const hoverRating = this.hoverRating\n            ? 'hover-' + this.hoverRating\n            : 'hover-0';\n        classNames.push(this.hoverEnabled ? hoverRating : '');\n        classNames.push(this.space ? 'space-' + this.space : '');\n        classNames.push(this.labelPosition ? 'label-' + this.labelPosition : '');\n        classNames.push(this.color ? 'color-' + this.color : '');\n        classNames.push(this.starType ? 'star-' + this.starType : '');\n        classNames.push(this.speed);\n        classNames.push(this.size);\n        classNames.push(this.readOnly ? 'read-only' : '');\n        classNames.push(this.disabled ? 'disabled' : '');\n        classNames.push(this.direction ? 'direction-' + this.direction : '');\n        return classNames.join(' ');\n    }\n    increment() {\n        //increment to next higher step\n        const absDiff = Math.abs(this.rating % this.step);\n        this.rating = this.rating + (absDiff > 0 ? this.step - absDiff : this.step);\n    }\n    decrement() {\n        //decrement to next lower step\n        const absDiff = Math.abs(this.rating % this.step);\n        this.rating = this.rating - (absDiff > 0 ? absDiff : this.step);\n    }\n    reset() {\n        this.rating = 0;\n    }\n}\nStarRating.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRating, deps: [{ token: StarRatingConfigService }], target: i0.ɵɵFactoryTarget.Component });\nStarRating.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.0\", type: StarRating, selector: \"placeholder-star-rating\", inputs: { showHalfStars: \"showHalfStars\", id: \"id\", focus: \"focus\", labelText: \"labelText\", labelPosition: \"labelPosition\", labelVisible: \"labelVisible\", hoverEnabled: \"hoverEnabled\", staticColor: \"staticColor\", direction: \"direction\", numOfStars: \"numOfStars\", hoverRating: \"hoverRating\", speed: \"speed\", size: \"size\", starType: \"starType\", space: \"space\", readOnly: \"readOnly\", disabled: \"disabled\", step: \"step\", rating: \"rating\" }, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRating, decorators: [{\n            type: Component,\n            args: [{\n                    // Metadata needed for Angular.\n                    template: ``,\n                    selector: 'placeholder-star-rating'\n                }]\n        }], ctorParameters: function () { return [{ type: StarRatingConfigService }]; }, propDecorators: { showHalfStars: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], focus: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], labelVisible: [{\n                type: Input\n            }], hoverEnabled: [{\n                type: Input\n            }], staticColor: [{\n                type: Input\n            }], direction: [{\n                type: Input\n            }], numOfStars: [{\n                type: Input\n            }], hoverRating: [{\n                type: Input\n            }], speed: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], starType: [{\n                type: Input\n            }], space: [{\n                type: Input\n            }], readOnly: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], rating: [{\n                type: Input\n            }] } });\n\nclass StarRatingComponent extends StarRating {\n    constructor(config) {\n        super(config);\n        this.starClickChange = new EventEmitter();\n        this.ratingChange = new EventEmitter();\n        this.hoverRatingChange = new EventEmitter();\n    }\n    saveOnClick($event) {\n        if (this.starClickChange) {\n            this.starClickChange.emit($event);\n        }\n    }\n    saveOnRatingChange($event) {\n        if (this.ratingChange) {\n            this.ratingChange.emit($event);\n        }\n    }\n    saveOnHover($event) {\n        if (this.hoverRatingChange) {\n            this.hoverRatingChange.emit($event);\n        }\n    }\n    /**ACCESSIBILITY **/\n    //Keyboard events\n    onKeyDown(event) {\n        if (!this.interactionPossible()) {\n            return;\n        }\n        const handlers = {\n            //Decrement\n            Minus: () => this.decrement(),\n            ArrowDown: () => this.decrement(),\n            ArrowLeft: () => this.decrement(),\n            //Increment\n            Plus: () => this.increment(),\n            ArrowRight: () => this.increment(),\n            ArrowUp: () => this.increment(),\n            //Reset\n            Backspace: () => this.reset(),\n            Delete: () => this.reset(),\n            Digit0: () => this.reset(),\n        };\n        const handleDigits = (eventCode) => {\n            const dStr = 'Digit';\n            const digit = parseInt(eventCode.substr(dStr.length, eventCode.length - 1), 10);\n            this.rating = digit;\n        };\n        if (handlers[event['code']] ||\n            StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n            if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n                handleDigits(event['code']);\n            }\n            else {\n                handlers[event['code']]();\n            }\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    //Hover events\n    onStarHover(rating) {\n        if (!this.interactionPossible() || !this.hoverEnabled) {\n            return;\n        }\n        this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0;\n        //update calculated Color\n        this.setColor(true);\n        //fire onHoverRatingChange event\n        const $event = { hoverRating: this.hoverRating };\n        this.saveOnHover($event);\n    }\n    onStopHover() {\n        if (!this.interactionPossible() || !this.hoverEnabled) {\n            return;\n        }\n        this.hoverRating = 0;\n        //update calculated Color\n        this.setColor();\n    }\n    //Overrides\n    setRating(value) {\n        const initValue = this.rating;\n        super.setRating(value);\n        //if value changed trigger valueAccessor events and outputs\n        if (initValue !== this.rating) {\n            const $event = { rating: this.rating };\n            this.saveOnRatingChange($event);\n        }\n    }\n    /**\n     * onStarClicked\n     *\n     * Is fired when a star is clicked. And updated the rating value.\n     * This function returns if the disabled or readOnly\n     * property is set. If provided it emits the onClick event\n     * handler with the actual rating value.\n     *\n     * @param rating\n     */\n    onStarClicked(rating) {\n        //fire onClick event\n        if (!this.interactionPossible()) {\n            return;\n        }\n        this.rating = rating;\n        const onClickEventObject = {\n            rating: this.rating,\n        };\n        this.saveOnClick(onClickEventObject);\n    }\n}\nStarRatingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingComponent, deps: [{ token: StarRatingConfigService }], target: i0.ɵɵFactoryTarget.Component });\nStarRatingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.0\", type: StarRatingComponent, selector: \"star-rating\", inputs: { getHalfStarVisible: \"getHalfStarVisible\", getColor: \"getColor\" }, outputs: { starClickChange: \"starClickChange\", ratingChange: \"ratingChange\", hoverRatingChange: \"hoverRatingChange\" }, usesInheritance: true, ngImport: i0, template: \"<div id=\\\"{{id}}\\\" class=\\\"rating {{getComponentClassNames()}}\\\" tabindex=\\\"0\\\"\\n  (keydown)=\\\"onKeyDown($event)\\\" (mouseleave)=\\\"onStopHover()\\\">\\n  <div *ngIf=\\\"labelText\\\" class=\\\"label-value\\\">{{labelText}}</div>\\n  <div class=\\\"star-container\\\">\\n    <div class=\\\"star\\\" (mouseenter)=\\\"onStarHover(star)\\\"\\n      *ngFor=\\\"let star of stars\\\" (click)=\\\"onStarClicked(star)\\\">\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-empty {{classEmpty}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-half {{classHalf}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-filled {{classFilled}}\\\"></i>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-empty\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathEmpty\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-half\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathHalf\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-filled\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathFilled\\\"></use>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\", dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'star-rating', template: \"<div id=\\\"{{id}}\\\" class=\\\"rating {{getComponentClassNames()}}\\\" tabindex=\\\"0\\\"\\n  (keydown)=\\\"onKeyDown($event)\\\" (mouseleave)=\\\"onStopHover()\\\">\\n  <div *ngIf=\\\"labelText\\\" class=\\\"label-value\\\">{{labelText}}</div>\\n  <div class=\\\"star-container\\\">\\n    <div class=\\\"star\\\" (mouseenter)=\\\"onStarHover(star)\\\"\\n      *ngFor=\\\"let star of stars\\\" (click)=\\\"onStarClicked(star)\\\">\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-empty {{classEmpty}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-half {{classHalf}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-filled {{classFilled}}\\\"></i>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-empty\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathEmpty\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-half\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathHalf\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-filled\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathFilled\\\"></use>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: StarRatingConfigService }]; }, propDecorators: { getHalfStarVisible: [{\n                type: Input\n            }], getColor: [{\n                type: Input\n            }], starClickChange: [{\n                type: Output\n            }], ratingChange: [{\n                type: Output\n            }], hoverRatingChange: [{\n                type: Output\n            }] } });\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst STAR_RATING_CONTROL_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => StarRatingControlComponent),\n    multi: true,\n};\nclass StarRatingControlComponent extends StarRating {\n    constructor(config) {\n        super(config);\n        this.starClickChange = new EventEmitter();\n        this.ratingChange = new EventEmitter();\n        this.hoverRatingChange = new EventEmitter();\n        this.onModelChangeRegistered = false;\n        this.onTouchRegistered = false;\n    }\n    saveOnClick($event) {\n        if (this.starClickChange) {\n            this.starClickChange.emit($event);\n        }\n    }\n    saveOnRatingChange($event) {\n        if (this.ratingChange) {\n            this.ratingChange.emit($event);\n        }\n    }\n    saveOnHover($event) {\n        if (this.hoverRatingChange) {\n            this.hoverRatingChange.emit($event);\n        }\n    }\n    saveOnTouch() {\n        if (this.onTouchRegistered) {\n            this.onTouch();\n        }\n    }\n    saveOnModelChange(value) {\n        if (this.onModelChangeRegistered) {\n            this.onModelChange(value);\n        }\n    }\n    /**ACCESSIBILITY **/\n    //Keyboard events\n    onKeyDown(event) {\n        if (!this.interactionPossible()) {\n            return;\n        }\n        const handlers = {\n            //Decrement\n            Minus: () => this.decrement(),\n            ArrowDown: () => this.decrement(),\n            ArrowLeft: () => this.decrement(),\n            //Increment\n            Plus: () => this.increment(),\n            ArrowRight: () => this.increment(),\n            ArrowUp: () => this.increment(),\n            //Reset\n            Backspace: () => this.reset(),\n            Delete: () => this.reset(),\n            Digit0: () => this.reset(),\n        };\n        const handleDigits = (eventCode) => {\n            const dStr = 'Digit';\n            const digit = parseInt(eventCode.substr(dStr.length, eventCode.length - 1), 10);\n            this.rating = digit;\n        };\n        if (handlers[event['code']] ||\n            StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n            if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n                handleDigits(event['code']);\n            }\n            else {\n                handlers[event['code']]();\n            }\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        this.saveOnTouch();\n    }\n    //Focus events\n    onBlur(event) {\n        this.focus = false;\n        event.preventDefault();\n        event.stopPropagation();\n        this.saveOnTouch();\n    }\n    onFocus(event) {\n        this.focus = true;\n        event.preventDefault();\n        event.stopPropagation();\n        this.saveOnTouch();\n    }\n    //Hover events\n    onStarHover(rating) {\n        if (!this.interactionPossible() || !this.hoverEnabled) {\n            return;\n        }\n        this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0;\n        //fire onHoverRatingChange event\n        const $event = { hoverRating: this.hoverRating };\n        this.saveOnHover($event);\n    }\n    /**Form Control - ControlValueAccessor implementation**/\n    writeValue(obj) {\n        this.rating = obj;\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n        this.onModelChangeRegistered = true;\n    }\n    registerOnTouched(fn) {\n        this.onTouch = fn;\n        this.onTouchRegistered = true;\n    }\n    //Overrides\n    setRating(value) {\n        const initValue = this.rating;\n        super.setRating(value);\n        //if value changed trigger valueAccessor events and outputs\n        if (initValue !== this.rating) {\n            const $event = { rating: this.rating };\n            this.saveOnRatingChange($event);\n            this.saveOnModelChange(this.rating);\n        }\n    }\n    /**\n     * onStarClicked\n     *\n     * Is fired when a star is clicked. And updated the rating value.\n     * This function returns if the disabled or readOnly\n     * property is set. If provided it emits the onClick event\n     * handler with the actual rating value.\n     *\n     * @param rating\n     */\n    onStarClicked(rating) {\n        //fire onClick event\n        if (!this.interactionPossible()) {\n            return;\n        }\n        this.rating = rating;\n        const onClickEventObject = {\n            rating: this.rating,\n        };\n        this.saveOnClick(onClickEventObject);\n    }\n}\nStarRatingControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingControlComponent, deps: [{ token: StarRatingConfigService }], target: i0.ɵɵFactoryTarget.Component });\nStarRatingControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.0\", type: StarRatingControlComponent, selector: \"star-rating-control\", outputs: { starClickChange: \"starClickChange\", ratingChange: \"ratingChange\", hoverRatingChange: \"hoverRatingChange\" }, providers: [STAR_RATING_CONTROL_ACCESSOR], usesInheritance: true, ngImport: i0, template: \"<div id=\\\"{{id}}\\\" class=\\\"rating {{getComponentClassNames()}}\\\" tabindex=\\\"0\\\"\\n  (keydown)=\\\"onKeyDown($event)\\\" (blur)=\\\"onBlur($event)\\\"\\n  (focus)=\\\"onFocus($event)\\\" (mouseleave)=\\\"onStarHover(0)\\\">\\n  <div *ngIf=\\\"labelText\\\" class=\\\"label-value\\\">{{labelText}}</div>\\n  <div class=\\\"star-container\\\">\\n    <div class=\\\"star\\\" (mouseenter)=\\\"onStarHover(star)\\\"\\n      *ngFor=\\\"let star of stars\\\" (click)=\\\"onStarClicked(star)\\\">\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-empty {{classEmpty}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-half {{classHalf}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-filled {{classFilled}}\\\"></i>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-empty\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathEmpty\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-half\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathHalf\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-filled\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathFilled\\\"></use>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\", dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingControlComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'star-rating-control', providers: [STAR_RATING_CONTROL_ACCESSOR], template: \"<div id=\\\"{{id}}\\\" class=\\\"rating {{getComponentClassNames()}}\\\" tabindex=\\\"0\\\"\\n  (keydown)=\\\"onKeyDown($event)\\\" (blur)=\\\"onBlur($event)\\\"\\n  (focus)=\\\"onFocus($event)\\\" (mouseleave)=\\\"onStarHover(0)\\\">\\n  <div *ngIf=\\\"labelText\\\" class=\\\"label-value\\\">{{labelText}}</div>\\n  <div class=\\\"star-container\\\">\\n    <div class=\\\"star\\\" (mouseenter)=\\\"onStarHover(star)\\\"\\n      *ngFor=\\\"let star of stars\\\" (click)=\\\"onStarClicked(star)\\\">\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-empty {{classEmpty}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-half {{classHalf}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-filled {{classFilled}}\\\"></i>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-empty\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathEmpty\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-half\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathHalf\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-filled\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathFilled\\\"></use>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: StarRatingConfigService }]; }, propDecorators: { starClickChange: [{\n                type: Output\n            }], ratingChange: [{\n                type: Output\n            }], hoverRatingChange: [{\n                type: Output\n            }] } });\n\nconst DECLARATIONS = [StarRatingComponent, StarRatingControlComponent];\nconst EXPORTS = [DECLARATIONS];\nclass StarRatingModule {\n    static forRoot() {\n        return {\n            ngModule: StarRatingModule,\n            providers: [StarRatingConfigService],\n        };\n    }\n    static forChild() {\n        return {\n            ngModule: StarRatingModule,\n            providers: [],\n        };\n    }\n}\nStarRatingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nStarRatingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingModule, declarations: [StarRatingComponent, StarRatingControlComponent], imports: [CommonModule], exports: [StarRatingComponent, StarRatingControlComponent] });\nStarRatingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [DECLARATIONS],\n                    exports: [EXPORTS],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { StarRating, StarRatingComponent, StarRatingConfig, StarRatingConfigService, StarRatingControlComponent, StarRatingModule, StarRatingUtils };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}