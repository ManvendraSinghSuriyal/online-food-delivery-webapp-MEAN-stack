{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Order } from 'src/app/shared/models/Order';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"src/app/services/cart.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-toastr\";\nexport class CheckoutComponent {\n  constructor(userService, cartService, fb, toastr) {\n    this.userService = userService;\n    this.cartService = cartService;\n    this.fb = fb;\n    this.toastr = toastr;\n    this.order = new Order();\n    const cart = this.cartService.getCart();\n    this.order.items = cart.items;\n    this.order.totalPrice = cart.totalPrice;\n  }\n  ngOnInit() {\n    const {\n      name,\n      address\n    } = this.userService.getCurrentUser();\n    this.checkoutForm = this.fb.group({\n      name: [name, Validators.required],\n      address: [address, Validators.required]\n    });\n  }\n  createOrder() {\n    if (this.checkoutForm.invalid) {\n      this.toastr.warning(\"please add value input field details!!\");\n      return;\n    }\n    this.order.name = this.checkoutForm.get('name')?.value;\n    this.order.address = this.checkoutForm.get('address')?.value;\n    console.log(this.order);\n  }\n}\nCheckoutComponent.ɵfac = function CheckoutComponent_Factory(t) {\n  return new (t || CheckoutComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.CartService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\nCheckoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CheckoutComponent,\n  selectors: [[\"app-checkout\"]],\n  decls: 2,\n  vars: 0,\n  template: function CheckoutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"checkout works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","Order","CheckoutComponent","constructor","userService","cartService","fb","toastr","order","cart","getCart","items","totalPrice","ngOnInit","name","address","getCurrentUser","checkoutForm","group","required","createOrder","invalid","warning","get","value","console","log","i0","ɵɵdirectiveInject","i1","UserService","i2","CartService","i3","FormBuilder","i4","ToastrService","selectors","decls","vars","template","CheckoutComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\Projects\\Angular Projects\\OnlineFoodDelivery_WebApplication\\Food-Delivery-WebApp\\src\\app\\components\\pages\\checkout\\checkout.component.ts","D:\\Projects\\Angular Projects\\OnlineFoodDelivery_WebApplication\\Food-Delivery-WebApp\\src\\app\\components\\pages\\checkout\\checkout.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { CartService } from 'src/app/services/cart.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { Order } from 'src/app/shared/models/Order';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n\norder:Order=new Order()\ncheckoutForm!:FormGroup\n\nconstructor(private userService:UserService,\n  private cartService:CartService,\n  private fb: FormBuilder,\n  private toastr:ToastrService){\n\n   const cart=this.cartService.getCart()\n\n    this.order.items=cart.items\n    this.order.totalPrice=cart.totalPrice\n    \n\n}\nngOnInit(): void {\n\n  const {name,address}=this.userService.getCurrentUser()\n  this.checkoutForm=this.fb.group({\n   name:[name,Validators.required],\n   address:[address,Validators.required]\n\n  });\n\n}\n\n\ncreateOrder(){\n\n  if(this.checkoutForm.invalid){\n  this.toastr.warning(\"please add value input field details!!\")\n  return;}\n\n  this.order.name=this.checkoutForm.get('name')?.value\n  this.order.address=this.checkoutForm.get('address')?.value\n\n  console.log(this.order)\n\n}\n\n}\n","<p>checkout works!</p>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AAInE,SAASC,KAAK,QAAQ,6BAA6B;;;;;;AAOnD,OAAM,MAAOC,iBAAiB;EAK9BC,YAAoBC,WAAuB,EACjCC,WAAuB,EACvBC,EAAe,EACfC,MAAoB;IAHV,KAAAH,WAAW,GAAXA,WAAW;IACrB,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,MAAM,GAANA,MAAM;IANhB,KAAAC,KAAK,GAAO,IAAIP,KAAK,EAAE;IAQpB,MAAMQ,IAAI,GAAC,IAAI,CAACJ,WAAW,CAACK,OAAO,EAAE;IAEpC,IAAI,CAACF,KAAK,CAACG,KAAK,GAACF,IAAI,CAACE,KAAK;IAC3B,IAAI,CAACH,KAAK,CAACI,UAAU,GAACH,IAAI,CAACG,UAAU;EAGzC;EACAC,QAAQA,CAAA;IAEN,MAAM;MAACC,IAAI;MAACC;IAAO,CAAC,GAAC,IAAI,CAACX,WAAW,CAACY,cAAc,EAAE;IACtD,IAAI,CAACC,YAAY,GAAC,IAAI,CAACX,EAAE,CAACY,KAAK,CAAC;MAC/BJ,IAAI,EAAC,CAACA,IAAI,EAACd,UAAU,CAACmB,QAAQ,CAAC;MAC/BJ,OAAO,EAAC,CAACA,OAAO,EAACf,UAAU,CAACmB,QAAQ;KAEpC,CAAC;EAEJ;EAGAC,WAAWA,CAAA;IAET,IAAG,IAAI,CAACH,YAAY,CAACI,OAAO,EAAC;MAC7B,IAAI,CAACd,MAAM,CAACe,OAAO,CAAC,wCAAwC,CAAC;MAC7D;;IAEA,IAAI,CAACd,KAAK,CAACM,IAAI,GAAC,IAAI,CAACG,YAAY,CAACM,GAAG,CAAC,MAAM,CAAC,EAAEC,KAAK;IACpD,IAAI,CAAChB,KAAK,CAACO,OAAO,GAAC,IAAI,CAACE,YAAY,CAACM,GAAG,CAAC,SAAS,CAAC,EAAEC,KAAK;IAE1DC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAClB,KAAK,CAAC;EAEzB;;AAxCaN,iBAAiB,C;mBAAjBA,iBAAiB,EAAAyB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAO,EAAA,CAAAC,aAAA;AAAA;AAAjBlC,iBAAiB,C;QAAjBA,iBAAiB;EAAAmC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZ9Bf,EAAA,CAAAiB,cAAA,QAAG;MAAAjB,EAAA,CAAAkB,MAAA,sBAAe;MAAAlB,EAAA,CAAAmB,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}