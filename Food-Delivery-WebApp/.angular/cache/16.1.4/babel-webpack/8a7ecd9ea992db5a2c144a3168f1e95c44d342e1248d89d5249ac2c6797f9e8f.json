{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Order } from 'src/app/shared/models/Order';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"src/app/services/cart.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nfunction CheckoutComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 15)(2, \"div\", 16)(3, \"a\", 17);\n    i0.ɵɵelement(4, \"img\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 19)(6, \"div\", 20)(7, \"h6\", 21);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\", 22);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", item_r1.food.imageUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r1.food.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"$\", item_r1.food.price, \"\");\n  }\n}\nexport class CheckoutComponent {\n  constructor(userService, cartService, fb, toastr) {\n    this.userService = userService;\n    this.cartService = cartService;\n    this.fb = fb;\n    this.toastr = toastr;\n    this.order = new Order();\n    const cart = this.cartService.getCart();\n    this.order.items = cart.items;\n    this.order.totalPrice = cart.totalPrice;\n  }\n  ngOnInit() {\n    const {\n      name,\n      address\n    } = this.userService.getCurrentUser();\n    this.checkoutForm = this.fb.group({\n      name: [name, Validators.required],\n      address: [address, Validators.required]\n    });\n  }\n  createOrder() {\n    if (this.checkoutForm.invalid) {\n      this.toastr.warning(\"please add value input field details!!\");\n      return;\n    }\n    this.order.name = this.checkoutForm.get('name')?.value;\n    this.order.address = this.checkoutForm.get('address')?.value;\n    console.log(this.order);\n  }\n}\nCheckoutComponent.ɵfac = function CheckoutComponent_Factory(t) {\n  return new (t || CheckoutComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.CartService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\nCheckoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CheckoutComponent,\n  selectors: [[\"app-checkout\"]],\n  decls: 24,\n  vars: 6,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"mb-4\"], [3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"address\", 1, \"form-label\"], [\"id\", \"address\", \"formControlName\", \"address\", \"rows\", \"3\", \"required\", \"\", 1, \"form-control\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\", \"pb-3\"], [\"class\", \"mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"card-text\", \"font-weight-bold\"], [1, \"d-flex\"], [1, \"mr-3\"], [\"href\", \"#\"], [\"alt\", \"Food\", 1, \"img-fluid\", \"rounded\", 2, \"max-width\", \"100px\", 3, \"src\"], [1, \"flex-grow-1\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"mb-1\", \"ms-3\"], [1, \"text-muted\", \"mb-0\"]],\n  template: function CheckoutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\n      i0.ɵɵtext(4, \"Billing Information\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 4)(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"textarea\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"div\", 10)(16, \"div\", 11)(17, \"h5\", 12);\n      i0.ɵɵtext(18, \"Order Summary\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, CheckoutComponent_div_19_Template, 11, 3, \"div\", 13);\n      i0.ɵɵelement(20, \"hr\");\n      i0.ɵɵelementStart(21, \"h3\", 14);\n      i0.ɵɵtext(22);\n      i0.ɵɵpipe(23, \"currency\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.order.items);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Total Price: $\", i0.ɵɵpipeBind2(23, 3, ctx.order.totalPrice, \"INR\"), \"\");\n    }\n  },\n  dependencies: [i5.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName, i5.CurrencyPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","Order","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","item_r1","food","imageUrl","ɵɵsanitizeUrl","ɵɵtextInterpolate","name","ɵɵtextInterpolate1","price","CheckoutComponent","constructor","userService","cartService","fb","toastr","order","cart","getCart","items","totalPrice","ngOnInit","address","getCurrentUser","checkoutForm","group","required","createOrder","invalid","warning","get","value","console","log","ɵɵdirectiveInject","i1","UserService","i2","CartService","i3","FormBuilder","i4","ToastrService","selectors","decls","vars","consts","template","CheckoutComponent_Template","rf","ctx","ɵɵtemplate","CheckoutComponent_div_19_Template","ɵɵpipeBind2"],"sources":["D:\\Projects\\Angular Projects\\OnlineFoodDelivery_WebApplication\\Food-Delivery-WebApp\\src\\app\\components\\pages\\checkout\\checkout.component.ts","D:\\Projects\\Angular Projects\\OnlineFoodDelivery_WebApplication\\Food-Delivery-WebApp\\src\\app\\components\\pages\\checkout\\checkout.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { CartService } from 'src/app/services/cart.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { Order } from 'src/app/shared/models/Order';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n\norder:Order=new Order()\ncheckoutForm!:FormGroup\n\nconstructor(private userService:UserService,\n  private cartService:CartService,\n  private fb: FormBuilder,\n  private toastr:ToastrService){\n\n   const cart=this.cartService.getCart()\n\n    this.order.items=cart.items\n    this.order.totalPrice=cart.totalPrice\n    \n\n}\nngOnInit(): void {\n\n  const {name,address}=this.userService.getCurrentUser()\n  this.checkoutForm=this.fb.group({\n   name:[name,Validators.required],\n   address:[address,Validators.required]\n\n  });\n\n}\n\n\ncreateOrder(){\n\n  if(this.checkoutForm.invalid){\n  this.toastr.warning(\"please add value input field details!!\")\n  return;}\n\n  this.order.name=this.checkoutForm.get('name')?.value\n  this.order.address=this.checkoutForm.get('address')?.value\n\n  console.log(this.order)\n\n}\n\n}\n","<div class=\"container mt-5\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <h2 class=\"mb-4\">Billing Information</h2>\n        <form [formGroup]=\"checkoutForm\">\n          <div class=\"mb-3\">\n            <label for=\"name\" class=\"form-label\">Name</label>\n            <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\" required>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"address\" class=\"form-label\">Address</label>\n            <textarea id=\"address\" class=\"form-control\" formControlName=\"address\" rows=\"3\" required></textarea>\n          </div>\n        </form>\n      </div>\n    <div class=\"col-md-6\">\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title pb-3\">Order Summary</h5>\n      <div *ngFor=\"let item of order.items\" class=\"mb-3\">\n        <div class=\"d-flex\">\n          <div class=\"mr-3\">\n            <a href=\"#\">\n              <img [src]=\"item.food.imageUrl\" alt=\"Food\" class=\"img-fluid rounded\" style=\"max-width: 100px;\">\n            </a>\n          </div>\n          <div class=\"flex-grow-1\">\n            <div class=\"d-flex justify-content-between\">\n              <h6 class=\"mb-1 ms-3\">{{ item.food.name }}</h6>\n              <p class=\"text-muted mb-0\">${{ item.food.price }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <hr>\n      <h3 class=\"card-text font-weight-bold\">Total Price: ${{ order.totalPrice | currency:'INR'}}</h3>\n    </div>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}