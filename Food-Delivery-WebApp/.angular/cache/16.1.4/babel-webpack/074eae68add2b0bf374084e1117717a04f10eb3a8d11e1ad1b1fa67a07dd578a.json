{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class LoadingInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    return next.handle(request);\n  }\n}\nLoadingInterceptor.ɵfac = function LoadingInterceptor_Factory(t) {\n  return new (t || LoadingInterceptor)();\n};\nLoadingInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoadingInterceptor,\n  factory: LoadingInterceptor.ɵfac\n});","map":{"version":3,"names":["LoadingInterceptor","constructor","intercept","request","next","handle","factory","ɵfac"],"sources":["D:\\Projects\\Angular Projects\\OnlineFoodDelivery_WebApplication\\Food-Delivery-WebApp\\src\\app\\shared\\interceptors\\loading.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request);\n  }\n}\n"],"mappings":";AAUA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAA,GAAe;EAEfC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,OAAOA,IAAI,CAACC,MAAM,CAACF,OAAO,CAAC;EAC7B;;AANWH,kBAAkB,C;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB,C;SAAlBA,kBAAkB;EAAAM,OAAA,EAAlBN,kBAAkB,CAAAO;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}